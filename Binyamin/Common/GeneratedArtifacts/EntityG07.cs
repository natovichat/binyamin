

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Meeting : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Meeting entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Meeting()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Meeting(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Meeting> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Meeting.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meeting_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meeting_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ClassNumber
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.ClassNumber);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.ClassNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClassNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClassNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClassNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Counselor Counselor
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Topic Topic
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Round Round
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Round_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Round_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Round_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Audience Audience
        {
            get
            {
                return global::LightSwitchApplication.Meeting.DetailsClass.GetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience);
            }
            set
            {
                global::LightSwitchApplication.Meeting.DetailsClass.SetValue(this, global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Meeting,
                global::LightSwitchApplication.Meeting.DetailsClass,
                global::LightSwitchApplication.Meeting.DetailsClass.IImplementation,
                global::LightSwitchApplication.Meeting.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>.Entry
                __MeetingEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>.Entry(
                    global::LightSwitchApplication.Meeting.DetailsClass.__Meeting_CreateNew,
                    global::LightSwitchApplication.Meeting.DetailsClass.__Meeting_Created,
                    global::LightSwitchApplication.Meeting.DetailsClass.__Meeting_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Meeting __Meeting_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Meeting> es)
            {
                return new global::LightSwitchApplication.Meeting(es);
            }
            private static void __Meeting_Created(global::LightSwitchApplication.Meeting e)
            {
                e.Meeting_Created();
            }
            private static bool __Meeting_AllowSaveWithErrors(global::LightSwitchApplication.Meeting e)
            {
                bool result = false;
                e.Meeting_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Meeting.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>> ClassNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.ClassNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor> Counselor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic> Topic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round> Round
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience> Audience
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.Nullable<int> ClassNumber { get; set; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Counselor { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Topic { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Round { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Audience { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>>.Entry
                    ClassNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ClassNumber",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._ClassNumber_OnValueChanged);
                private static void _ClassNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._ClassNumber, sf);
                }
                private static bool _ClassNumber_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.ClassNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClassNumber_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClassNumber_Validate(r);
                }
                private static global::System.Nullable<int> _ClassNumber_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.ClassNumber;
                }
                private static void _ClassNumber_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ClassNumber = v;
                }
                private static void _ClassNumber_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.ClassNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor>.Entry
                    Counselor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor>.Entry(
                        "Counselor",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_GetCoreImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_Refresh,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Counselor_OnValueChanged);
                private static void _Counselor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._Counselor, sf);
                }
                private static bool _Counselor_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.Counselor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Counselor_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Counselor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Counselor_GetCoreImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.Counselor;
                }
                private static global::LightSwitchApplication.Counselor _Counselor_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Counselor, global::LightSwitchApplication.Counselor.DetailsClass>(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor);
                }
                private static void _Counselor_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, global::LightSwitchApplication.Counselor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor, (i, ev) => i.Counselor = ev, v);
                }
                private static void _Counselor_Refresh(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor);
                }
                private static void _Counselor_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.Counselor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic>.Entry
                    Topic = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic>.Entry(
                        "Topic",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_GetCoreImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_Refresh,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Topic_OnValueChanged);
                private static void _Topic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._Topic, sf);
                }
                private static bool _Topic_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.Topic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Topic_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Topic_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Topic_GetCoreImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.Topic;
                }
                private static global::LightSwitchApplication.Topic _Topic_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Topic, global::LightSwitchApplication.Topic.DetailsClass>(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic, ref d._Topic);
                }
                private static void _Topic_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, global::LightSwitchApplication.Topic v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic, ref d._Topic, (i, ev) => i.Topic = ev, v);
                }
                private static void _Topic_Refresh(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Topic, ref d._Topic);
                }
                private static void _Topic_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.Topic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round>.Entry
                    Round = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round>.Entry(
                        "Round",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_GetCoreImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_Refresh,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Round_OnValueChanged);
                private static void _Round_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._Round, sf);
                }
                private static bool _Round_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.Round_IsReadOnly(ref result);
                    return result;
                }
                private static void _Round_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Round_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Round_GetCoreImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.Round;
                }
                private static global::LightSwitchApplication.Round _Round_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round, ref d._Round);
                }
                private static void _Round_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, global::LightSwitchApplication.Round v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round, ref d._Round, (i, ev) => i.Round = ev, v);
                }
                private static void _Round_Refresh(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Round, ref d._Round);
                }
                private static void _Round_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.Round_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience>.Entry
                    Audience = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience>.Entry(
                        "Audience",
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_Stub,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_ComputeIsReadOnly,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_Validate,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_GetCoreImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_GetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_SetImplementationValue,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_Refresh,
                        global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties._Audience_OnValueChanged);
                private static void _Audience_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Meeting.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience>.Data> c, global::LightSwitchApplication.Meeting.DetailsClass d, object sf)
                {
                    c(d, ref d._Audience, sf);
                }
                private static bool _Audience_ComputeIsReadOnly(global::LightSwitchApplication.Meeting e)
                {
                    bool result = false;
                    e.Audience_IsReadOnly(ref result);
                    return result;
                }
                private static void _Audience_Validate(global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Audience_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Audience_GetCoreImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.ImplementationEntity.Audience;
                }
                private static global::LightSwitchApplication.Audience _Audience_GetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Audience, global::LightSwitchApplication.Audience.DetailsClass>(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience, ref d._Audience);
                }
                private static void _Audience_SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass d, global::LightSwitchApplication.Audience v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience, ref d._Audience, (i, ev) => i.Audience = ev, v);
                }
                private static void _Audience_Refresh(global::LightSwitchApplication.Meeting.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Meeting.DetailsClass.PropertySetProperties.Audience, ref d._Audience);
                }
                private static void _Audience_OnValueChanged(global::LightSwitchApplication.Meeting e)
                {
                    e.Audience_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::System.Nullable<int>>.Data _ClassNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Counselor>.Data _Counselor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Topic>.Data _Topic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Round>.Data _Round;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass, global::LightSwitchApplication.Audience>.Data _Audience;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Contact : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Contact entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Contact.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FullName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FullName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FullName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PhoneNumber1
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber1);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PhoneNumber2
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber2);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhoneNumber2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Email
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Email_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Activity> Activities
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Activities);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Activity> ActivitiesQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Activities);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Role Role
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SchoolPart SchoolPart
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPart_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Orders> Orders
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Orders);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Orders> OrdersQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Orders);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Contact,
                global::LightSwitchApplication.Contact.DetailsClass,
                global::LightSwitchApplication.Contact.DetailsClass.IImplementation,
                global::LightSwitchApplication.Contact.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry
                __ContactEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry(
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_CreateNew,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_Created,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Contact __Contact_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> es)
            {
                return new global::LightSwitchApplication.Contact(es);
            }
            private static void __Contact_Created(global::LightSwitchApplication.Contact e)
            {
                e.Contact_Created();
            }
            private static bool __Contact_AllowSaveWithErrors(global::LightSwitchApplication.Contact e)
            {
                bool result = false;
                e.Contact_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Contact.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> FullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FullName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> PhoneNumber1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> PhoneNumber2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.PhoneNumber2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Email
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Email) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity> Activities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Activities) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role> Role
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart> SchoolPart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders> Orders
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Orders) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string FullName { get; set; }
                new string PhoneNumber1 { get; set; }
                new string PhoneNumber2 { get; set; }
                new string Email { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable Activities { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Role { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SchoolPart { get; set; }
                new global::System.Collections.IEnumerable Orders { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    FullName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "FullName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FullName_OnValueChanged);
                private static void _FullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._FullName, sf);
                }
                private static bool _FullName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.FullName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FullName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FullName_Validate(r);
                }
                private static string _FullName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.FullName;
                }
                private static void _FullName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FullName = v;
                }
                private static void _FullName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.FullName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    PhoneNumber1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "PhoneNumber1",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber1_OnValueChanged);
                private static void _PhoneNumber1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._PhoneNumber1, sf);
                }
                private static bool _PhoneNumber1_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.PhoneNumber1_IsReadOnly(ref result);
                    return result;
                }
                private static void _PhoneNumber1_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PhoneNumber1_Validate(r);
                }
                private static string _PhoneNumber1_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.PhoneNumber1;
                }
                private static void _PhoneNumber1_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PhoneNumber1 = v;
                }
                private static void _PhoneNumber1_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.PhoneNumber1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    PhoneNumber2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "PhoneNumber2",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._PhoneNumber2_OnValueChanged);
                private static void _PhoneNumber2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._PhoneNumber2, sf);
                }
                private static bool _PhoneNumber2_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.PhoneNumber2_IsReadOnly(ref result);
                    return result;
                }
                private static void _PhoneNumber2_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PhoneNumber2_Validate(r);
                }
                private static string _PhoneNumber2_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.PhoneNumber2;
                }
                private static void _PhoneNumber2_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PhoneNumber2 = v;
                }
                private static void _PhoneNumber2_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.PhoneNumber2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Email = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Email",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Email_OnValueChanged);
                private static void _Email_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Email, sf);
                }
                private static bool _Email_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Email_IsReadOnly(ref result);
                    return result;
                }
                private static void _Email_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Email_Validate(r);
                }
                private static string _Email_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Email;
                }
                private static void _Email_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Email = v;
                }
                private static void _Email_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Email_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activities = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activities",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Activities_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Activities_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Activities_GetEntityCollection);
                private static void _Activities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Activities, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> _Activities_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Activities, ref d._Activities);
                }
                private static global::System.Collections.IEnumerable _Activities_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Activities;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role>.Entry
                    Role = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role>.Entry(
                        "Role",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_Refresh,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Role_OnValueChanged);
                private static void _Role_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Role, sf);
                }
                private static bool _Role_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Role_IsReadOnly(ref result);
                    return result;
                }
                private static void _Role_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Role_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Role_GetCoreImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Role;
                }
                private static global::LightSwitchApplication.Role _Role_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Role, global::LightSwitchApplication.Role.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role, ref d._Role);
                }
                private static void _Role_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::LightSwitchApplication.Role v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role, ref d._Role, (i, ev) => i.Role = ev, v);
                }
                private static void _Role_Refresh(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Role, ref d._Role);
                }
                private static void _Role_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Role_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart>.Entry
                    SchoolPart = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart>.Entry(
                        "SchoolPart",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_Refresh,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SchoolPart_OnValueChanged);
                private static void _SchoolPart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolPart, sf);
                }
                private static bool _SchoolPart_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.SchoolPart_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolPart_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolPart_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SchoolPart_GetCoreImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolPart;
                }
                private static global::LightSwitchApplication.SchoolPart _SchoolPart_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SchoolPart, global::LightSwitchApplication.SchoolPart.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart, ref d._SchoolPart);
                }
                private static void _SchoolPart_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::LightSwitchApplication.SchoolPart v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart, ref d._SchoolPart, (i, ev) => i.SchoolPart = ev, v);
                }
                private static void _SchoolPart_Refresh(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SchoolPart, ref d._SchoolPart);
                }
                private static void _SchoolPart_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.SchoolPart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders>.Entry
                    Orders = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders>.Entry(
                        "Orders",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Orders_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Orders_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Orders_GetEntityCollection);
                private static void _Orders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Orders, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders> _Orders_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Orders, global::LightSwitchApplication.Orders.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Orders, ref d._Orders);
                }
                private static global::System.Collections.IEnumerable _Orders_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Orders;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _FullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _PhoneNumber1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _PhoneNumber2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Email;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activities;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Role>.Data _Role;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SchoolPart>.Data _SchoolPart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Orders>.Data _Orders;
            
        }
    
        #endregion
    }
    
    #endregion
}
