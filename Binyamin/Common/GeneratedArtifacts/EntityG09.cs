

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ActivityStatus : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ActivityStatus entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityStatus()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityStatus(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityStatus> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ActivityStatus.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ActivityStatus.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.ActivityStatus.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int InternalId
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.InternalId);
            }
            set
            {
                global::LightSwitchApplication.ActivityStatus.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.InternalId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternalId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternalId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InternalId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ActivityStatus.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Activity> Activities
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Activities);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Activity> ActivitiesQuery
        {
            get
            {
                return global::LightSwitchApplication.ActivityStatus.DetailsClass.GetQuery(this, global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Activities);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ActivityStatus,
                global::LightSwitchApplication.ActivityStatus.DetailsClass,
                global::LightSwitchApplication.ActivityStatus.DetailsClass.IImplementation,
                global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>.Entry
                __ActivityStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>.Entry(
                    global::LightSwitchApplication.ActivityStatus.DetailsClass.__ActivityStatus_CreateNew,
                    global::LightSwitchApplication.ActivityStatus.DetailsClass.__ActivityStatus_Created,
                    global::LightSwitchApplication.ActivityStatus.DetailsClass.__ActivityStatus_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ActivityStatus __ActivityStatus_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityStatus> es)
            {
                return new global::LightSwitchApplication.ActivityStatus(es);
            }
            private static void __ActivityStatus_Created(global::LightSwitchApplication.ActivityStatus e)
            {
                e.ActivityStatus_Created();
            }
            private static bool __ActivityStatus_AllowSaveWithErrors(global::LightSwitchApplication.ActivityStatus e)
            {
                bool result = false;
                e.ActivityStatus_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int> InternalId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.InternalId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity> Activities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Activities) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Title { get; set; }
                new int InternalId { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable Activities { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ActivityStatus e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ActivityStatus e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ActivityStatus e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.ActivityStatus e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.ActivityStatus e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.ActivityStatus e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Entry
                    InternalId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Entry(
                        "InternalId",
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_Stub,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_Validate,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_GetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_SetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._InternalId_OnValueChanged);
                private static void _InternalId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._InternalId, sf);
                }
                private static bool _InternalId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityStatus e)
                {
                    bool result = false;
                    e.InternalId_IsReadOnly(ref result);
                    return result;
                }
                private static void _InternalId_Validate(global::LightSwitchApplication.ActivityStatus e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InternalId_Validate(r);
                }
                private static int _InternalId_GetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.ImplementationEntity.InternalId;
                }
                private static void _InternalId_SetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d, int v)
                {
                    d.ImplementationEntity.InternalId = v;
                }
                private static void _InternalId_OnValueChanged(global::LightSwitchApplication.ActivityStatus e)
                {
                    e.InternalId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ActivityStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ActivityStatus e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ActivityStatus e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ActivityStatus.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ActivityStatus e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activities = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activities",
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Activities_Stub,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Activities_GetReferencedEntities,
                        global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties._Activities_GetEntityCollection);
                private static void _Activities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.ActivityStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Activities, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> _Activities_GetReferencedEntities(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.ActivityStatus.DetailsClass.PropertySetProperties.Activities, ref d._Activities);
                }
                private static global::System.Collections.IEnumerable _Activities_GetEntityCollection(global::LightSwitchApplication.ActivityStatus.DetailsClass d)
                {
                    return d.ImplementationEntity.Activities;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, int>.Data _InternalId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ActivityStatus, global::LightSwitchApplication.ActivityStatus.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activities;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CRs : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CRs entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CRs()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CRs(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CRs> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CRs.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRs_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRs_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Prioraty
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Prioraty);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Prioraty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prioraty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prioraty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prioraty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateOfReolved
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.DateOfReolved);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.DateOfReolved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOfReolved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOfReolved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateOfReolved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.CRs.DetailsClass.GetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.CRs.DetailsClass.SetValue(this, global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CRs,
                global::LightSwitchApplication.CRs.DetailsClass,
                global::LightSwitchApplication.CRs.DetailsClass.IImplementation,
                global::LightSwitchApplication.CRs.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>.Entry
                __CRsEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>.Entry(
                    global::LightSwitchApplication.CRs.DetailsClass.__CRs_CreateNew,
                    global::LightSwitchApplication.CRs.DetailsClass.__CRs_Created,
                    global::LightSwitchApplication.CRs.DetailsClass.__CRs_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CRs __CRs_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CRs> es)
            {
                return new global::LightSwitchApplication.CRs(es);
            }
            private static void __CRs_Created(global::LightSwitchApplication.CRs e)
            {
                e.CRs_Created();
            }
            private static bool __CRs_AllowSaveWithErrors(global::LightSwitchApplication.CRs e)
            {
                bool result = false;
                e.CRs_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CRs.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string> Prioraty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Prioraty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>> DateOfReolved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.DateOfReolved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Description { get; set; }
                new string Status { get; set; }
                new string Prioraty { get; set; }
                new global::System.Nullable<global::System.DateTime> DateOfReolved { get; set; }
                new string Type { get; set; }
                new byte[] RowVersion { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry
                    Prioraty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry(
                        "Prioraty",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Prioraty_OnValueChanged);
                private static void _Prioraty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._Prioraty, sf);
                }
                private static bool _Prioraty_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.Prioraty_IsReadOnly(ref result);
                    return result;
                }
                private static void _Prioraty_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Prioraty_Validate(r);
                }
                private static string _Prioraty_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.Prioraty;
                }
                private static void _Prioraty_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Prioraty = v;
                }
                private static void _Prioraty_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.Prioraty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateOfReolved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateOfReolved",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._DateOfReolved_OnValueChanged);
                private static void _DateOfReolved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._DateOfReolved, sf);
                }
                private static bool _DateOfReolved_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.DateOfReolved_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateOfReolved_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateOfReolved_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateOfReolved_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.DateOfReolved;
                }
                private static void _DateOfReolved_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateOfReolved = global::LightSwitchApplication.CRs.DetailsClass.TruncateDate(v);
                }
                private static void _DateOfReolved_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.DateOfReolved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.CRs.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CRs.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.CRs.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.CRs e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.CRs.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.CRs e)
                {
                    e.RowVersion_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data _Prioraty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateOfReolved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CRs, global::LightSwitchApplication.CRs.DetailsClass, byte[]>.Data _RowVersion;
            
        }
    
        #endregion
    }
    
    #endregion
}
