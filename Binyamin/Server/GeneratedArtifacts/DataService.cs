//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Inserting(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Inserted(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Updating(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Updated(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Deleting(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Deleted(global::LightSwitchApplication.City entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Validate(global::LightSwitchApplication.City entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.City, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Inserting(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Inserted(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Updating(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Updated(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Deleting(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Deleted(global::LightSwitchApplication.District entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Validate(global::LightSwitchApplication.District entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Districts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.District, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Inserting(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Inserted(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Updating(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Updated(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Deleting(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Deleted(global::LightSwitchApplication.ActivityType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Validate(global::LightSwitchApplication.ActivityType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Inserting(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Inserted(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Updating(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Updated(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Deleting(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Deleted(global::LightSwitchApplication.School entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Validate(global::LightSwitchApplication.School entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schools_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.School, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Inserting(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Inserted(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Updating(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Updated(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Deleting(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Deleted(global::LightSwitchApplication.SchoolPart entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Validate(global::LightSwitchApplication.SchoolPart entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolParts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolPart, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Inserting(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Inserted(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Updating(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Updated(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Deleting(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Deleted(global::LightSwitchApplication.Activity entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Validate(global::LightSwitchApplication.Activity entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Inserting(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Inserted(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Updating(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Updated(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Deleting(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Deleted(global::LightSwitchApplication.Topic entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Validate(global::LightSwitchApplication.Topic entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topics_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Topic, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Inserting(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Inserted(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Updating(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Updated(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Deleting(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Deleted(global::LightSwitchApplication.TopicCollection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Validate(global::LightSwitchApplication.TopicCollection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollections_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TopicCollection, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Inserting(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Inserted(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Updating(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Updated(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Deleting(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Deleted(global::LightSwitchApplication.Counselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Validate(global::LightSwitchApplication.Counselor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Counselor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Inserting(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Inserted(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Updating(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Updated(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Deleting(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Deleted(global::LightSwitchApplication.Role entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Validate(global::LightSwitchApplication.Role entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Roles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Inserting(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Inserted(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Updating(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Updated(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Deleting(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Deleted(global::LightSwitchApplication.SchoolType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Validate(global::LightSwitchApplication.SchoolType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Inserting(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Inserted(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Updating(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Updated(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Deleting(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Deleted(global::LightSwitchApplication.Round entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Validate(global::LightSwitchApplication.Round entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rounds_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Round, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Inserting(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Inserted(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Updating(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Updated(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Deleting(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Deleted(global::LightSwitchApplication.Meeting entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Validate(global::LightSwitchApplication.Meeting entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Meetings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Meeting, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Inserting(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Inserted(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Updating(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Updated(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Deleting(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Deleted(global::LightSwitchApplication.Contact entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Validate(global::LightSwitchApplication.Contact entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contacts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Inserting(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Inserted(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Updating(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Updated(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Deleting(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Deleted(global::LightSwitchApplication.ActivityCounselor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Validate(global::LightSwitchApplication.ActivityCounselor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Inserting(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Inserted(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Updating(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Updated(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Deleting(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Deleted(global::LightSwitchApplication.Audience entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Validate(global::LightSwitchApplication.Audience entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audiences_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audience, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Inserting(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Inserted(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Updating(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Updated(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Deleting(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Deleted(global::LightSwitchApplication.ActivityStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Validate(global::LightSwitchApplication.ActivityStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatus_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Inserting(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Inserted(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Updating(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Updated(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Deleting(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Deleted(global::LightSwitchApplication.CRs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Validate(global::LightSwitchApplication.CRs entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CRsSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CRs, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Inserting(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Inserted(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Updating(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Updated(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Deleting(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Deleted(global::LightSwitchApplication.Partners entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Validate(global::LightSwitchApplication.Partners entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Partners_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Partners, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Inserting(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Inserted(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Updating(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Updated(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Deleting(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Deleted(global::LightSwitchApplication.PartnerSchools entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Validate(global::LightSwitchApplication.PartnerSchools entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerSchools_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerSchools, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Inserting(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Inserted(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Updating(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Updated(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Deleting(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Deleted(global::LightSwitchApplication.PartnersGroups entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Validate(global::LightSwitchApplication.PartnersGroups entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersGroups, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Inserting(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Inserted(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Updating(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Updated(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Deleting(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Deleted(global::LightSwitchApplication.PartnerTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Validate(global::LightSwitchApplication.PartnerTypes entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnerTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerTypes, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Inserting(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Inserted(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Updating(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Updated(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Deleting(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Deleted(global::LightSwitchApplication.PartnersReport entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Validate(global::LightSwitchApplication.PartnersReport entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReport_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersReport, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Inserting(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Inserted(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Updating(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Updated(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Deleting(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Deleted(global::LightSwitchApplication.PartnerReportActivities entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Validate(global::LightSwitchApplication.PartnerReportActivities entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PartnersReportActivities_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerReportActivities, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserting(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserted(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updating(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updated(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleting(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleted(global::LightSwitchApplication.Orders entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Orders entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Orders, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Inserting(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Inserted(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Updating(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Updated(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Deleting(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Deleted(global::LightSwitchApplication.Emails entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Validate(global::LightSwitchApplication.Emails entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Emails, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Inserting(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Inserted(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Updating(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Updated(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Deleting(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Deleted(global::LightSwitchApplication.UserPrefs entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Validate(global::LightSwitchApplication.UserPrefs entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPrefs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPrefs, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Inserting(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Inserted(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Updating(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Updated(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Deleting(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Deleted(global::LightSwitchApplication.OrderClassesAndCounslers entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Validate(global::LightSwitchApplication.OrderClassesAndCounslers entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderClassesAndCounslersSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderClassesAndCounslers, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Inserting(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Inserted(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Updating(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Updated(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Deleting(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Deleted(global::LightSwitchApplication.OrderPropertiesWrapper entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Validate(global::LightSwitchApplication.OrderPropertiesWrapper entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPropertiesWrappers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderPropertiesWrapper, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Inserting(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Inserted(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Updating(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Updated(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Deleting(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Deleted(global::LightSwitchApplication.OrderProperties entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Validate(global::LightSwitchApplication.OrderProperties entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderProperties_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProperties, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Inserting(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Inserted(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Updating(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Updated(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Deleting(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Deleted(global::LightSwitchApplication.ActivityCounselorCommit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Validate(global::LightSwitchApplication.ActivityCounselorCommit entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommits_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselorCommit, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolContacts_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolContacts_Executing(global::System.Nullable<int> SchoolPartId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolContacts_PreprocessQuery(global::System.Nullable<int> SchoolPartId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolContacts_Executed(global::System.Nullable<int> SchoolPartId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolContacts_ExecuteFailed(global::System.Nullable<int> SchoolPartId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollectionTopics_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionTopics_Executing(global::System.Nullable<int> TopicCollectionId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollectionTopics_PreprocessQuery(global::System.Nullable<int> TopicCollectionId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Topic> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionTopics_Executed(global::System.Nullable<int> TopicCollectionId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Topic> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionTopics_ExecuteFailed(global::System.Nullable<int> TopicCollectionId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollectionByActivityType_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionByActivityType_Executing(global::System.Nullable<int> ActivityTypeId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollectionByActivityType_PreprocessQuery(global::System.Nullable<int> ActivityTypeId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.TopicCollection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionByActivityType_Executed(global::System.Nullable<int> ActivityTypeId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TopicCollection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TopicCollectionByActivityType_ExecuteFailed(global::System.Nullable<int> ActivityTypeId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsByActivty_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByActivty_Executing(global::System.Nullable<int> ActivityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsByActivty_PreprocessQuery(global::System.Nullable<int> ActivityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByActivty_Executed(global::System.Nullable<int> ActivityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByActivty_ExecuteFailed(global::System.Nullable<int> ActivityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedActivity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedActivity_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedActivity_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedActivity_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedActivity_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDistrict_Executing(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByDistrict_PreprocessQuery(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDistrict_Executed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDistrict_ExecuteFailed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsByDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByDistrict_Executing(global::System.Nullable<int> DistrictId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsByDistrict_PreprocessQuery(global::System.Nullable<int> DistrictId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByDistrict_Executed(global::System.Nullable<int> DistrictId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsByDistrict_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartsByDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByDistrict_Executing(global::System.Nullable<int> DistrictId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartsByDistrict_PreprocessQuery(global::System.Nullable<int> DistrictId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByDistrict_Executed(global::System.Nullable<int> DistrictId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByDistrict_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CityByDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CityByDistrict_Executing(global::System.Nullable<int> DistrictId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CityByDistrict_PreprocessQuery(global::System.Nullable<int> DistrictId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.City> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CityByDistrict_Executed(global::System.Nullable<int> DistrictId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.City> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CityByDistrict_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartsByCity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByCity_Executing(global::System.Nullable<int> CityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartsByCity_PreprocessQuery(global::System.Nullable<int> CityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByCity_Executed(global::System.Nullable<int> CityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SchoolPartsByCity_ExecuteFailed(global::System.Nullable<int> CityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchActivity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchActivity_Executing(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, string SearchText);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchActivity_PreprocessQuery(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, string SearchText, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchActivity_Executed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, string SearchText, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchActivity_ExecuteFailed(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<int> SchoolPartDistrictId, string SearchText, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByInternalId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByInternalId_Executing(global::System.Nullable<int> InternalId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByInternalId_PreprocessQuery(global::System.Nullable<int> InternalId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityStatus> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByInternalId_Executed(global::System.Nullable<int> InternalId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityStatus> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByInternalId_ExecuteFailed(global::System.Nullable<int> InternalId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchSchool_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchSchool_Executing(string SearchText);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchSchool_PreprocessQuery(string SearchText, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchSchool_Executed(string SearchText, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SearchSchool_ExecuteFailed(string SearchText, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsSortByName_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsSortByName_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorsSortByName_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsSortByName_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorsSortByName_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorsByDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByDate_Executing(global::System.Nullable<int> CounselorId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorsByDate_PreprocessQuery(global::System.Nullable<int> CounselorId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByDate_Executed(global::System.Nullable<int> CounselorId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityCounselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByDate_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorsByCounselor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByCounselor_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorsByCounselor_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByCounselor_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityCounselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityCounselorsByCounselor_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FixCR_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FixCR_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FixCR_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.CRs> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FixCR_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CRs> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FixCR_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewDevelopmentCR_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NewDevelopmentCR_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewDevelopmentCR_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.CRs> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NewDevelopmentCR_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CRs> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NewDevelopmentCR_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdersShowCanceled_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrdersShowCanceled_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdersShowCanceled_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrdersShowCanceled_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrdersShowCanceled_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderShowApproved_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowApproved_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderShowApproved_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowApproved_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowApproved_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderShowWaitingForApproved_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowWaitingForApproved_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderShowWaitingForApproved_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowWaitingForApproved_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderShowWaitingForApproved_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsBySchool_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsBySchool_Executing(global::System.Nullable<int> school_id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsBySchool_PreprocessQuery(global::System.Nullable<int> school_id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsBySchool_Executed(global::System.Nullable<int> school_id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ContactsBySchool_ExecuteFailed(global::System.Nullable<int> school_id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPricesByClassThenCounslers_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderPricesByClassThenCounslers_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderPricesByClassThenCounslers_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.OrderClassesAndCounslers> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderPricesByClassThenCounslers_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OrderClassesAndCounslers> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void OrderPricesByClassThenCounslers_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivitiesByCounselor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivitiesByCounselor_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PastActivitiesByCounselor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PastActivitiesByCounselor_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PastActivitiesByCounselor_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PastActivitiesByCounselor_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PastActivitiesByCounselor_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FutureActivitiesByCounselor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FutureActivitiesByCounselor_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FutureActivitiesByCounselor_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FutureActivitiesByCounselor_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FutureActivitiesByCounselor_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorByUserPass_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorByUserPass_Executing(string Username, string Password);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorByUserPass_PreprocessQuery(string Username, string Password, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorByUserPass_Executed(string Username, string Password, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CounselorByUserPass_ExecuteFailed(string Username, string Password, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FuturesActivities_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FuturesActivities_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FuturesActivities_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FuturesActivities_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FuturesActivities_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDate_Executing(global::System.Nullable<global::System.DateTime> activityDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityByDate_PreprocessQuery(global::System.Nullable<global::System.DateTime> activityDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDate_Executed(global::System.Nullable<global::System.DateTime> activityDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityByDate_ExecuteFailed(global::System.Nullable<global::System.DateTime> activityDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.City>
                __CitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.City>(
                    "Cities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cities_Filter);
            private static bool __Cities_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cities_CanInsert(ref result);
                return result;
            }
            private static bool __Cities_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cities_CanUpdate(ref result);
                return result;
            }
            private static bool __Cities_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cities_CanDelete(ref result);
                return result;
            }
            private static bool __Cities_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cities_CanRead(ref result);
                return result;
            }
            private static void __Cities_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Inserting(e);
            }
            private static void __Cities_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Inserted(e);
            }
            private static void __Cities_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Updating(e);
            }
            private static void __Cities_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Updated(e);
            }
            private static void __Cities_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Deleting(e);
            }
            private static void __Cities_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e)
            {
                d.Cities_Deleted(e);
            }
            private static void __Cities_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.City e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Cities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.City, bool>> __Cities_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.City, bool>> filter = null;
                d.Cities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.District>
                __DistrictsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.District>(
                    "Districts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Districts_Filter);
            private static bool __Districts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Districts_CanInsert(ref result);
                return result;
            }
            private static bool __Districts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Districts_CanUpdate(ref result);
                return result;
            }
            private static bool __Districts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Districts_CanDelete(ref result);
                return result;
            }
            private static bool __Districts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Districts_CanRead(ref result);
                return result;
            }
            private static void __Districts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Inserting(e);
            }
            private static void __Districts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Inserted(e);
            }
            private static void __Districts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Updating(e);
            }
            private static void __Districts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Updated(e);
            }
            private static void __Districts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Deleting(e);
            }
            private static void __Districts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e)
            {
                d.Districts_Deleted(e);
            }
            private static void __Districts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.District e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Districts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.District, bool>> __Districts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.District, bool>> filter = null;
                d.Districts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityType>
                __ActivityTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityType>(
                    "ActivityTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityTypes_Filter);
            private static bool __ActivityTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityTypes_CanInsert(ref result);
                return result;
            }
            private static bool __ActivityTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __ActivityTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityTypes_CanDelete(ref result);
                return result;
            }
            private static bool __ActivityTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityTypes_CanRead(ref result);
                return result;
            }
            private static void __ActivityTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Inserting(e);
            }
            private static void __ActivityTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Inserted(e);
            }
            private static void __ActivityTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Updating(e);
            }
            private static void __ActivityTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Updated(e);
            }
            private static void __ActivityTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Deleting(e);
            }
            private static void __ActivityTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e)
            {
                d.ActivityTypes_Deleted(e);
            }
            private static void __ActivityTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActivityTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityType, bool>> __ActivityTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityType, bool>> filter = null;
                d.ActivityTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.School>
                __SchoolsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.School>(
                    "Schools",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Schools_Filter);
            private static bool __Schools_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Schools_CanInsert(ref result);
                return result;
            }
            private static bool __Schools_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Schools_CanUpdate(ref result);
                return result;
            }
            private static bool __Schools_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Schools_CanDelete(ref result);
                return result;
            }
            private static bool __Schools_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Schools_CanRead(ref result);
                return result;
            }
            private static void __Schools_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Inserting(e);
            }
            private static void __Schools_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Inserted(e);
            }
            private static void __Schools_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Updating(e);
            }
            private static void __Schools_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Updated(e);
            }
            private static void __Schools_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Deleting(e);
            }
            private static void __Schools_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e)
            {
                d.Schools_Deleted(e);
            }
            private static void __Schools_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.School e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Schools_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.School, bool>> __Schools_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.School, bool>> filter = null;
                d.Schools_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>
                __SchoolPartsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>(
                    "SchoolParts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolParts_Filter);
            private static bool __SchoolParts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolParts_CanInsert(ref result);
                return result;
            }
            private static bool __SchoolParts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolParts_CanUpdate(ref result);
                return result;
            }
            private static bool __SchoolParts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolParts_CanDelete(ref result);
                return result;
            }
            private static bool __SchoolParts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolParts_CanRead(ref result);
                return result;
            }
            private static void __SchoolParts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Inserting(e);
            }
            private static void __SchoolParts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Inserted(e);
            }
            private static void __SchoolParts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Updating(e);
            }
            private static void __SchoolParts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Updated(e);
            }
            private static void __SchoolParts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Deleting(e);
            }
            private static void __SchoolParts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e)
            {
                d.SchoolParts_Deleted(e);
            }
            private static void __SchoolParts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolPart e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SchoolParts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolPart, bool>> __SchoolParts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolPart, bool>> filter = null;
                d.SchoolParts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __ActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "Activities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Activities_Filter);
            private static bool __Activities_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Activities_CanInsert(ref result);
                return result;
            }
            private static bool __Activities_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Activities_CanUpdate(ref result);
                return result;
            }
            private static bool __Activities_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Activities_CanDelete(ref result);
                return result;
            }
            private static bool __Activities_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Activities_CanRead(ref result);
                return result;
            }
            private static void __Activities_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Inserting(e);
            }
            private static void __Activities_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Inserted(e);
            }
            private static void __Activities_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Updating(e);
            }
            private static void __Activities_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Updated(e);
            }
            private static void __Activities_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Deleting(e);
            }
            private static void __Activities_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e)
            {
                d.Activities_Deleted(e);
            }
            private static void __Activities_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Activity e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Activities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> __Activities_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Activity, bool>> filter = null;
                d.Activities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Topic>
                __TopicsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Topic>(
                    "Topics",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Topics_Filter);
            private static bool __Topics_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Topics_CanInsert(ref result);
                return result;
            }
            private static bool __Topics_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Topics_CanUpdate(ref result);
                return result;
            }
            private static bool __Topics_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Topics_CanDelete(ref result);
                return result;
            }
            private static bool __Topics_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Topics_CanRead(ref result);
                return result;
            }
            private static void __Topics_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Inserting(e);
            }
            private static void __Topics_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Inserted(e);
            }
            private static void __Topics_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Updating(e);
            }
            private static void __Topics_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Updated(e);
            }
            private static void __Topics_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Deleting(e);
            }
            private static void __Topics_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e)
            {
                d.Topics_Deleted(e);
            }
            private static void __Topics_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Topic e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Topics_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Topic, bool>> __Topics_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Topic, bool>> filter = null;
                d.Topics_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TopicCollection>
                __TopicCollectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TopicCollection>(
                    "TopicCollections",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollections_Filter);
            private static bool __TopicCollections_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TopicCollections_CanInsert(ref result);
                return result;
            }
            private static bool __TopicCollections_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TopicCollections_CanUpdate(ref result);
                return result;
            }
            private static bool __TopicCollections_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TopicCollections_CanDelete(ref result);
                return result;
            }
            private static bool __TopicCollections_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TopicCollections_CanRead(ref result);
                return result;
            }
            private static void __TopicCollections_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Inserting(e);
            }
            private static void __TopicCollections_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Inserted(e);
            }
            private static void __TopicCollections_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Updating(e);
            }
            private static void __TopicCollections_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Updated(e);
            }
            private static void __TopicCollections_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Deleting(e);
            }
            private static void __TopicCollections_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e)
            {
                d.TopicCollections_Deleted(e);
            }
            private static void __TopicCollections_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TopicCollection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TopicCollections_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TopicCollection, bool>> __TopicCollections_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TopicCollection, bool>> filter = null;
                d.TopicCollections_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>
                __CounselorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>(
                    "Counselors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Counselors_Filter);
            private static bool __Counselors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Counselors_CanInsert(ref result);
                return result;
            }
            private static bool __Counselors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Counselors_CanUpdate(ref result);
                return result;
            }
            private static bool __Counselors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Counselors_CanDelete(ref result);
                return result;
            }
            private static bool __Counselors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Counselors_CanRead(ref result);
                return result;
            }
            private static void __Counselors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Inserting(e);
            }
            private static void __Counselors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Inserted(e);
            }
            private static void __Counselors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Updating(e);
            }
            private static void __Counselors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Updated(e);
            }
            private static void __Counselors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Deleting(e);
            }
            private static void __Counselors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e)
            {
                d.Counselors_Deleted(e);
            }
            private static void __Counselors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Counselor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Counselors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Counselor, bool>> __Counselors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Counselor, bool>> filter = null;
                d.Counselors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Role>
                __RolesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Role>(
                    "Roles",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Roles_Filter);
            private static bool __Roles_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Roles_CanInsert(ref result);
                return result;
            }
            private static bool __Roles_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Roles_CanUpdate(ref result);
                return result;
            }
            private static bool __Roles_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Roles_CanDelete(ref result);
                return result;
            }
            private static bool __Roles_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Roles_CanRead(ref result);
                return result;
            }
            private static void __Roles_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Inserting(e);
            }
            private static void __Roles_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Inserted(e);
            }
            private static void __Roles_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Updating(e);
            }
            private static void __Roles_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Updated(e);
            }
            private static void __Roles_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Deleting(e);
            }
            private static void __Roles_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e)
            {
                d.Roles_Deleted(e);
            }
            private static void __Roles_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Role e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Roles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> __Roles_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Role, bool>> filter = null;
                d.Roles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolType>
                __SchoolTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolType>(
                    "SchoolTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolTypes_Filter);
            private static bool __SchoolTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolTypes_CanInsert(ref result);
                return result;
            }
            private static bool __SchoolTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __SchoolTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolTypes_CanDelete(ref result);
                return result;
            }
            private static bool __SchoolTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SchoolTypes_CanRead(ref result);
                return result;
            }
            private static void __SchoolTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Inserting(e);
            }
            private static void __SchoolTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Inserted(e);
            }
            private static void __SchoolTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Updating(e);
            }
            private static void __SchoolTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Updated(e);
            }
            private static void __SchoolTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Deleting(e);
            }
            private static void __SchoolTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e)
            {
                d.SchoolTypes_Deleted(e);
            }
            private static void __SchoolTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SchoolType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SchoolTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolType, bool>> __SchoolTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SchoolType, bool>> filter = null;
                d.SchoolTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Round>
                __RoundsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Round>(
                    "Rounds",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Rounds_Filter);
            private static bool __Rounds_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Rounds_CanInsert(ref result);
                return result;
            }
            private static bool __Rounds_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Rounds_CanUpdate(ref result);
                return result;
            }
            private static bool __Rounds_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Rounds_CanDelete(ref result);
                return result;
            }
            private static bool __Rounds_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Rounds_CanRead(ref result);
                return result;
            }
            private static void __Rounds_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Inserting(e);
            }
            private static void __Rounds_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Inserted(e);
            }
            private static void __Rounds_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Updating(e);
            }
            private static void __Rounds_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Updated(e);
            }
            private static void __Rounds_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Deleting(e);
            }
            private static void __Rounds_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e)
            {
                d.Rounds_Deleted(e);
            }
            private static void __Rounds_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Rounds_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Round, bool>> __Rounds_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Round, bool>> filter = null;
                d.Rounds_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Meeting>
                __MeetingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Meeting>(
                    "Meetings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Meetings_Filter);
            private static bool __Meetings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Meetings_CanInsert(ref result);
                return result;
            }
            private static bool __Meetings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Meetings_CanUpdate(ref result);
                return result;
            }
            private static bool __Meetings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Meetings_CanDelete(ref result);
                return result;
            }
            private static bool __Meetings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Meetings_CanRead(ref result);
                return result;
            }
            private static void __Meetings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Inserting(e);
            }
            private static void __Meetings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Inserted(e);
            }
            private static void __Meetings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Updating(e);
            }
            private static void __Meetings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Updated(e);
            }
            private static void __Meetings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Deleting(e);
            }
            private static void __Meetings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e)
            {
                d.Meetings_Deleted(e);
            }
            private static void __Meetings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Meeting e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Meetings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Meeting, bool>> __Meetings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Meeting, bool>> filter = null;
                d.Meetings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __ContactsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "Contacts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Contacts_Filter);
            private static bool __Contacts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanInsert(ref result);
                return result;
            }
            private static bool __Contacts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanUpdate(ref result);
                return result;
            }
            private static bool __Contacts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanDelete(ref result);
                return result;
            }
            private static bool __Contacts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Contacts_CanRead(ref result);
                return result;
            }
            private static void __Contacts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Inserting(e);
            }
            private static void __Contacts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Inserted(e);
            }
            private static void __Contacts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Updating(e);
            }
            private static void __Contacts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Updated(e);
            }
            private static void __Contacts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Deleting(e);
            }
            private static void __Contacts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e)
            {
                d.Contacts_Deleted(e);
            }
            private static void __Contacts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Contacts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> __Contacts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Contact, bool>> filter = null;
                d.Contacts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>
                __ActivityCounselorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>(
                    "ActivityCounselors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselors_Filter);
            private static bool __ActivityCounselors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselors_CanInsert(ref result);
                return result;
            }
            private static bool __ActivityCounselors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselors_CanUpdate(ref result);
                return result;
            }
            private static bool __ActivityCounselors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselors_CanDelete(ref result);
                return result;
            }
            private static bool __ActivityCounselors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselors_CanRead(ref result);
                return result;
            }
            private static void __ActivityCounselors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Inserting(e);
            }
            private static void __ActivityCounselors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Inserted(e);
            }
            private static void __ActivityCounselors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Updating(e);
            }
            private static void __ActivityCounselors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Updated(e);
            }
            private static void __ActivityCounselors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Deleting(e);
            }
            private static void __ActivityCounselors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e)
            {
                d.ActivityCounselors_Deleted(e);
            }
            private static void __ActivityCounselors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActivityCounselors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselor, bool>> __ActivityCounselors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselor, bool>> filter = null;
                d.ActivityCounselors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audience>
                __AudiencesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audience>(
                    "Audiences",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audiences_Filter);
            private static bool __Audiences_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiences_CanInsert(ref result);
                return result;
            }
            private static bool __Audiences_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiences_CanUpdate(ref result);
                return result;
            }
            private static bool __Audiences_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiences_CanDelete(ref result);
                return result;
            }
            private static bool __Audiences_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audiences_CanRead(ref result);
                return result;
            }
            private static void __Audiences_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Inserting(e);
            }
            private static void __Audiences_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Inserted(e);
            }
            private static void __Audiences_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Updating(e);
            }
            private static void __Audiences_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Updated(e);
            }
            private static void __Audiences_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Deleting(e);
            }
            private static void __Audiences_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e)
            {
                d.Audiences_Deleted(e);
            }
            private static void __Audiences_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audience e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Audiences_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audience, bool>> __Audiences_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audience, bool>> filter = null;
                d.Audiences_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityStatus>
                __ActivityStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityStatus>(
                    "ActivityStatus",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityStatus_Filter);
            private static bool __ActivityStatus_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityStatus_CanInsert(ref result);
                return result;
            }
            private static bool __ActivityStatus_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityStatus_CanUpdate(ref result);
                return result;
            }
            private static bool __ActivityStatus_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityStatus_CanDelete(ref result);
                return result;
            }
            private static bool __ActivityStatus_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityStatus_CanRead(ref result);
                return result;
            }
            private static void __ActivityStatus_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Inserting(e);
            }
            private static void __ActivityStatus_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Inserted(e);
            }
            private static void __ActivityStatus_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Updating(e);
            }
            private static void __ActivityStatus_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Updated(e);
            }
            private static void __ActivityStatus_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Deleting(e);
            }
            private static void __ActivityStatus_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e)
            {
                d.ActivityStatus_Deleted(e);
            }
            private static void __ActivityStatus_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActivityStatus_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityStatus, bool>> __ActivityStatus_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityStatus, bool>> filter = null;
                d.ActivityStatus_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>
                __CRsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>(
                    "CRsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CRsSet_Filter);
            private static bool __CRsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CRsSet_CanInsert(ref result);
                return result;
            }
            private static bool __CRsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CRsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __CRsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CRsSet_CanDelete(ref result);
                return result;
            }
            private static bool __CRsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CRsSet_CanRead(ref result);
                return result;
            }
            private static void __CRsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Inserting(e);
            }
            private static void __CRsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Inserted(e);
            }
            private static void __CRsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Updating(e);
            }
            private static void __CRsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Updated(e);
            }
            private static void __CRsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Deleting(e);
            }
            private static void __CRsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e)
            {
                d.CRsSet_Deleted(e);
            }
            private static void __CRsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CRs e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CRsSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CRs, bool>> __CRsSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CRs, bool>> filter = null;
                d.CRsSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Partners>
                __PartnersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Partners>(
                    "Partners",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Partners_Filter);
            private static bool __Partners_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Partners_CanInsert(ref result);
                return result;
            }
            private static bool __Partners_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Partners_CanUpdate(ref result);
                return result;
            }
            private static bool __Partners_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Partners_CanDelete(ref result);
                return result;
            }
            private static bool __Partners_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Partners_CanRead(ref result);
                return result;
            }
            private static void __Partners_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Inserting(e);
            }
            private static void __Partners_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Inserted(e);
            }
            private static void __Partners_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Updating(e);
            }
            private static void __Partners_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Updated(e);
            }
            private static void __Partners_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Deleting(e);
            }
            private static void __Partners_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e)
            {
                d.Partners_Deleted(e);
            }
            private static void __Partners_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Partners e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Partners_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Partners, bool>> __Partners_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Partners, bool>> filter = null;
                d.Partners_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerSchools>
                __PartnerSchoolsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerSchools>(
                    "PartnerSchools",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerSchools_Filter);
            private static bool __PartnerSchools_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerSchools_CanInsert(ref result);
                return result;
            }
            private static bool __PartnerSchools_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerSchools_CanUpdate(ref result);
                return result;
            }
            private static bool __PartnerSchools_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerSchools_CanDelete(ref result);
                return result;
            }
            private static bool __PartnerSchools_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerSchools_CanRead(ref result);
                return result;
            }
            private static void __PartnerSchools_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Inserting(e);
            }
            private static void __PartnerSchools_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Inserted(e);
            }
            private static void __PartnerSchools_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Updating(e);
            }
            private static void __PartnerSchools_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Updated(e);
            }
            private static void __PartnerSchools_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Deleting(e);
            }
            private static void __PartnerSchools_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e)
            {
                d.PartnerSchools_Deleted(e);
            }
            private static void __PartnerSchools_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerSchools e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PartnerSchools_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerSchools, bool>> __PartnerSchools_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerSchools, bool>> filter = null;
                d.PartnerSchools_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnersGroups>
                __PartnersGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnersGroups>(
                    "PartnersGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersGroups_Filter);
            private static bool __PartnersGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersGroups_CanInsert(ref result);
                return result;
            }
            private static bool __PartnersGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __PartnersGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersGroups_CanDelete(ref result);
                return result;
            }
            private static bool __PartnersGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersGroups_CanRead(ref result);
                return result;
            }
            private static void __PartnersGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Inserting(e);
            }
            private static void __PartnersGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Inserted(e);
            }
            private static void __PartnersGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Updating(e);
            }
            private static void __PartnersGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Updated(e);
            }
            private static void __PartnersGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Deleting(e);
            }
            private static void __PartnersGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e)
            {
                d.PartnersGroups_Deleted(e);
            }
            private static void __PartnersGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersGroups e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PartnersGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersGroups, bool>> __PartnersGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersGroups, bool>> filter = null;
                d.PartnersGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerTypes>
                __PartnerTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerTypes>(
                    "PartnerTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnerTypes_Filter);
            private static bool __PartnerTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerTypes_CanInsert(ref result);
                return result;
            }
            private static bool __PartnerTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __PartnerTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerTypes_CanDelete(ref result);
                return result;
            }
            private static bool __PartnerTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnerTypes_CanRead(ref result);
                return result;
            }
            private static void __PartnerTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Inserting(e);
            }
            private static void __PartnerTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Inserted(e);
            }
            private static void __PartnerTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Updating(e);
            }
            private static void __PartnerTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Updated(e);
            }
            private static void __PartnerTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Deleting(e);
            }
            private static void __PartnerTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e)
            {
                d.PartnerTypes_Deleted(e);
            }
            private static void __PartnerTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerTypes e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PartnerTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerTypes, bool>> __PartnerTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerTypes, bool>> filter = null;
                d.PartnerTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnersReport>
                __PartnersReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnersReport>(
                    "PartnersReport",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReport_Filter);
            private static bool __PartnersReport_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReport_CanInsert(ref result);
                return result;
            }
            private static bool __PartnersReport_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReport_CanUpdate(ref result);
                return result;
            }
            private static bool __PartnersReport_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReport_CanDelete(ref result);
                return result;
            }
            private static bool __PartnersReport_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReport_CanRead(ref result);
                return result;
            }
            private static void __PartnersReport_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Inserting(e);
            }
            private static void __PartnersReport_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Inserted(e);
            }
            private static void __PartnersReport_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Updating(e);
            }
            private static void __PartnersReport_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Updated(e);
            }
            private static void __PartnersReport_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Deleting(e);
            }
            private static void __PartnersReport_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e)
            {
                d.PartnersReport_Deleted(e);
            }
            private static void __PartnersReport_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnersReport e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PartnersReport_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersReport, bool>> __PartnersReport_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnersReport, bool>> filter = null;
                d.PartnersReport_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerReportActivities>
                __PartnersReportActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PartnerReportActivities>(
                    "PartnersReportActivities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PartnersReportActivities_Filter);
            private static bool __PartnersReportActivities_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReportActivities_CanInsert(ref result);
                return result;
            }
            private static bool __PartnersReportActivities_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReportActivities_CanUpdate(ref result);
                return result;
            }
            private static bool __PartnersReportActivities_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReportActivities_CanDelete(ref result);
                return result;
            }
            private static bool __PartnersReportActivities_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PartnersReportActivities_CanRead(ref result);
                return result;
            }
            private static void __PartnersReportActivities_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Inserting(e);
            }
            private static void __PartnersReportActivities_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Inserted(e);
            }
            private static void __PartnersReportActivities_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Updating(e);
            }
            private static void __PartnersReportActivities_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Updated(e);
            }
            private static void __PartnersReportActivities_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Deleting(e);
            }
            private static void __PartnersReportActivities_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e)
            {
                d.PartnersReportActivities_Deleted(e);
            }
            private static void __PartnersReportActivities_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PartnerReportActivities e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PartnersReportActivities_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerReportActivities, bool>> __PartnersReportActivities_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PartnerReportActivities, bool>> filter = null;
                d.PartnersReportActivities_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>(
                    "Orders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Filter);
            private static bool __Orders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanInsert(ref result);
                return result;
            }
            private static bool __Orders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanUpdate(ref result);
                return result;
            }
            private static bool __Orders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanDelete(ref result);
                return result;
            }
            private static bool __Orders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Inserting(e);
            }
            private static void __Orders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Inserted(e);
            }
            private static void __Orders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Updating(e);
            }
            private static void __Orders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Updated(e);
            }
            private static void __Orders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Deleting(e);
            }
            private static void __Orders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e)
            {
                d.Orders_Deleted(e);
            }
            private static void __Orders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Orders e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Orders, bool>> __Orders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Orders, bool>> filter = null;
                d.Orders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Emails>
                __EmailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Emails>(
                    "Emails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Emails_Filter);
            private static bool __Emails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Emails_CanInsert(ref result);
                return result;
            }
            private static bool __Emails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Emails_CanUpdate(ref result);
                return result;
            }
            private static bool __Emails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Emails_CanDelete(ref result);
                return result;
            }
            private static bool __Emails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Emails_CanRead(ref result);
                return result;
            }
            private static void __Emails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Inserting(e);
            }
            private static void __Emails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Inserted(e);
            }
            private static void __Emails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Updating(e);
            }
            private static void __Emails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Updated(e);
            }
            private static void __Emails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Deleting(e);
            }
            private static void __Emails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e)
            {
                d.Emails_Deleted(e);
            }
            private static void __Emails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Emails e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Emails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Emails, bool>> __Emails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Emails, bool>> filter = null;
                d.Emails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPrefs>
                __UserPrefsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPrefs>(
                    "UserPrefs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPrefs_Filter);
            private static bool __UserPrefs_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPrefs_CanInsert(ref result);
                return result;
            }
            private static bool __UserPrefs_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPrefs_CanUpdate(ref result);
                return result;
            }
            private static bool __UserPrefs_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPrefs_CanDelete(ref result);
                return result;
            }
            private static bool __UserPrefs_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPrefs_CanRead(ref result);
                return result;
            }
            private static void __UserPrefs_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Inserting(e);
            }
            private static void __UserPrefs_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Inserted(e);
            }
            private static void __UserPrefs_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Updating(e);
            }
            private static void __UserPrefs_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Updated(e);
            }
            private static void __UserPrefs_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Deleting(e);
            }
            private static void __UserPrefs_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e)
            {
                d.UserPrefs_Deleted(e);
            }
            private static void __UserPrefs_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPrefs e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserPrefs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPrefs, bool>> __UserPrefs_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPrefs, bool>> filter = null;
                d.UserPrefs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderClassesAndCounslers>
                __OrderClassesAndCounslersSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderClassesAndCounslers>(
                    "OrderClassesAndCounslersSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderClassesAndCounslersSet_Filter);
            private static bool __OrderClassesAndCounslersSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderClassesAndCounslersSet_CanInsert(ref result);
                return result;
            }
            private static bool __OrderClassesAndCounslersSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderClassesAndCounslersSet_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderClassesAndCounslersSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderClassesAndCounslersSet_CanDelete(ref result);
                return result;
            }
            private static bool __OrderClassesAndCounslersSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderClassesAndCounslersSet_CanRead(ref result);
                return result;
            }
            private static void __OrderClassesAndCounslersSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Inserting(e);
            }
            private static void __OrderClassesAndCounslersSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Inserted(e);
            }
            private static void __OrderClassesAndCounslersSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Updating(e);
            }
            private static void __OrderClassesAndCounslersSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Updated(e);
            }
            private static void __OrderClassesAndCounslersSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Deleting(e);
            }
            private static void __OrderClassesAndCounslersSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e)
            {
                d.OrderClassesAndCounslersSet_Deleted(e);
            }
            private static void __OrderClassesAndCounslersSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderClassesAndCounslers e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderClassesAndCounslersSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderClassesAndCounslers, bool>> __OrderClassesAndCounslersSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderClassesAndCounslers, bool>> filter = null;
                d.OrderClassesAndCounslersSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderPropertiesWrapper>
                __OrderPropertiesWrappersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderPropertiesWrapper>(
                    "OrderPropertiesWrappers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPropertiesWrappers_Filter);
            private static bool __OrderPropertiesWrappers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderPropertiesWrappers_CanInsert(ref result);
                return result;
            }
            private static bool __OrderPropertiesWrappers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderPropertiesWrappers_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderPropertiesWrappers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderPropertiesWrappers_CanDelete(ref result);
                return result;
            }
            private static bool __OrderPropertiesWrappers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderPropertiesWrappers_CanRead(ref result);
                return result;
            }
            private static void __OrderPropertiesWrappers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Inserting(e);
            }
            private static void __OrderPropertiesWrappers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Inserted(e);
            }
            private static void __OrderPropertiesWrappers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Updating(e);
            }
            private static void __OrderPropertiesWrappers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Updated(e);
            }
            private static void __OrderPropertiesWrappers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Deleting(e);
            }
            private static void __OrderPropertiesWrappers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e)
            {
                d.OrderPropertiesWrappers_Deleted(e);
            }
            private static void __OrderPropertiesWrappers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderPropertiesWrapper e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderPropertiesWrappers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderPropertiesWrapper, bool>> __OrderPropertiesWrappers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderPropertiesWrapper, bool>> filter = null;
                d.OrderPropertiesWrappers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderProperties>
                __OrderPropertiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderProperties>(
                    "OrderProperties",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderProperties_Filter);
            private static bool __OrderProperties_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderProperties_CanInsert(ref result);
                return result;
            }
            private static bool __OrderProperties_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderProperties_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderProperties_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderProperties_CanDelete(ref result);
                return result;
            }
            private static bool __OrderProperties_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderProperties_CanRead(ref result);
                return result;
            }
            private static void __OrderProperties_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Inserting(e);
            }
            private static void __OrderProperties_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Inserted(e);
            }
            private static void __OrderProperties_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Updating(e);
            }
            private static void __OrderProperties_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Updated(e);
            }
            private static void __OrderProperties_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Deleting(e);
            }
            private static void __OrderProperties_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e)
            {
                d.OrderProperties_Deleted(e);
            }
            private static void __OrderProperties_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderProperties e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderProperties_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProperties, bool>> __OrderProperties_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderProperties, bool>> filter = null;
                d.OrderProperties_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselorCommit>
                __ActivityCounselorCommitsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselorCommit>(
                    "ActivityCounselorCommits",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorCommits_Filter);
            private static bool __ActivityCounselorCommits_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselorCommits_CanInsert(ref result);
                return result;
            }
            private static bool __ActivityCounselorCommits_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselorCommits_CanUpdate(ref result);
                return result;
            }
            private static bool __ActivityCounselorCommits_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselorCommits_CanDelete(ref result);
                return result;
            }
            private static bool __ActivityCounselorCommits_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ActivityCounselorCommits_CanRead(ref result);
                return result;
            }
            private static void __ActivityCounselorCommits_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Inserting(e);
            }
            private static void __ActivityCounselorCommits_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Inserted(e);
            }
            private static void __ActivityCounselorCommits_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Updating(e);
            }
            private static void __ActivityCounselorCommits_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Updated(e);
            }
            private static void __ActivityCounselorCommits_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Deleting(e);
            }
            private static void __ActivityCounselorCommits_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                d.ActivityCounselorCommits_Deleted(e);
            }
            private static void __ActivityCounselorCommits_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActivityCounselorCommits_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselorCommit, bool>> __ActivityCounselorCommits_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ActivityCounselorCommit, bool>> filter = null;
                d.ActivityCounselorCommits_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __SchoolContactsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "SchoolContacts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolContacts_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolContacts_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolContacts_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolContacts_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolContacts_PreprocessQuery);
            private static bool __SchoolContacts_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SchoolContacts_CanExecute(ref r);
                return r;
            }
            private static void __SchoolContacts_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolContacts_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SchoolContacts_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolContacts_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact>)args[1]);
            }
            private static void __SchoolContacts_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SchoolContacts_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SchoolContacts_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contact>)args[1];
                d.SchoolContacts_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Topic>
                __TopicCollectionTopicsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Topic>(
                    "TopicCollectionTopics",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionTopics_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionTopics_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionTopics_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionTopics_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionTopics_PreprocessQuery);
            private static bool __TopicCollectionTopics_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.TopicCollectionTopics_CanExecute(ref r);
                return r;
            }
            private static void __TopicCollectionTopics_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TopicCollectionTopics_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __TopicCollectionTopics_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TopicCollectionTopics_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Topic>)args[1]);
            }
            private static void __TopicCollectionTopics_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.TopicCollectionTopics_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __TopicCollectionTopics_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Topic> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Topic>)args[1];
                d.TopicCollectionTopics_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TopicCollection>
                __TopicCollectionByActivityTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TopicCollection>(
                    "TopicCollectionByActivityType",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionByActivityType_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionByActivityType_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionByActivityType_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionByActivityType_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TopicCollectionByActivityType_PreprocessQuery);
            private static bool __TopicCollectionByActivityType_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.TopicCollectionByActivityType_CanExecute(ref r);
                return r;
            }
            private static void __TopicCollectionByActivityType_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TopicCollectionByActivityType_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __TopicCollectionByActivityType_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TopicCollectionByActivityType_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TopicCollection>)args[1]);
            }
            private static void __TopicCollectionByActivityType_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.TopicCollectionByActivityType_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __TopicCollectionByActivityType_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TopicCollection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TopicCollection>)args[1];
                d.TopicCollectionByActivityType_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>
                __CounselorsByActivtyEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>(
                    "CounselorsByActivty",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByActivty_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByActivty_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByActivty_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByActivty_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByActivty_PreprocessQuery);
            private static bool __CounselorsByActivty_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CounselorsByActivty_CanExecute(ref r);
                return r;
            }
            private static void __CounselorsByActivty_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsByActivty_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CounselorsByActivty_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsByActivty_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor>)args[1]);
            }
            private static void __CounselorsByActivty_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CounselorsByActivty_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CounselorsByActivty_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor>)args[1];
                d.CounselorsByActivty_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __SortedActivityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "SortedActivity",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedActivity_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedActivity_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedActivity_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedActivity_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedActivity_PreprocessQuery);
            private static bool __SortedActivity_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SortedActivity_CanExecute(ref r);
                return r;
            }
            private static void __SortedActivity_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedActivity_Executing();
            }
            private static void __SortedActivity_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedActivity_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[0]);
            }
            private static void __SortedActivity_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SortedActivity_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortedActivity_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[0];
                d.SortedActivity_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __ActivityByDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "ActivityByDistrict",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDistrict_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDistrict_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDistrict_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDistrict_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDistrict_PreprocessQuery);
            private static bool __ActivityByDistrict_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivityByDistrict_CanExecute(ref r);
                return r;
            }
            private static void __ActivityByDistrict_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByDistrict_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2]);
            }
            private static void __ActivityByDistrict_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByDistrict_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[3]);
            }
            private static void __ActivityByDistrict_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityByDistrict_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __ActivityByDistrict_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[3];
                d.ActivityByDistrict_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>
                __CounselorsByDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>(
                    "CounselorsByDistrict",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByDistrict_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByDistrict_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByDistrict_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByDistrict_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsByDistrict_PreprocessQuery);
            private static bool __CounselorsByDistrict_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CounselorsByDistrict_CanExecute(ref r);
                return r;
            }
            private static void __CounselorsByDistrict_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsByDistrict_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CounselorsByDistrict_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsByDistrict_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor>)args[1]);
            }
            private static void __CounselorsByDistrict_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CounselorsByDistrict_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CounselorsByDistrict_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor>)args[1];
                d.CounselorsByDistrict_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>
                __SchoolPartsByDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>(
                    "SchoolPartsByDistrict",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByDistrict_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByDistrict_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByDistrict_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByDistrict_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByDistrict_PreprocessQuery);
            private static bool __SchoolPartsByDistrict_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SchoolPartsByDistrict_CanExecute(ref r);
                return r;
            }
            private static void __SchoolPartsByDistrict_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolPartsByDistrict_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SchoolPartsByDistrict_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolPartsByDistrict_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart>)args[1]);
            }
            private static void __SchoolPartsByDistrict_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SchoolPartsByDistrict_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SchoolPartsByDistrict_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart>)args[1];
                d.SchoolPartsByDistrict_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.City>
                __CityByDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.City>(
                    "CityByDistrict",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CityByDistrict_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CityByDistrict_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CityByDistrict_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CityByDistrict_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CityByDistrict_PreprocessQuery);
            private static bool __CityByDistrict_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CityByDistrict_CanExecute(ref r);
                return r;
            }
            private static void __CityByDistrict_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CityByDistrict_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CityByDistrict_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CityByDistrict_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.City>)args[1]);
            }
            private static void __CityByDistrict_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CityByDistrict_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CityByDistrict_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.City> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.City>)args[1];
                d.CityByDistrict_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>
                __SchoolPartsByCityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>(
                    "SchoolPartsByCity",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByCity_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByCity_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByCity_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByCity_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SchoolPartsByCity_PreprocessQuery);
            private static bool __SchoolPartsByCity_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SchoolPartsByCity_CanExecute(ref r);
                return r;
            }
            private static void __SchoolPartsByCity_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolPartsByCity_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __SchoolPartsByCity_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SchoolPartsByCity_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart>)args[1]);
            }
            private static void __SchoolPartsByCity_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SchoolPartsByCity_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SchoolPartsByCity_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart>)args[1];
                d.SchoolPartsByCity_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __SearchActivityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "SearchActivity",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchActivity_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchActivity_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchActivity_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchActivity_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchActivity_PreprocessQuery);
            private static bool __SearchActivity_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SearchActivity_CanExecute(ref r);
                return r;
            }
            private static void __SearchActivity_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchActivity_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], (string)args[3]);
            }
            private static void __SearchActivity_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchActivity_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[4]);
            }
            private static void __SearchActivity_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SearchActivity_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __SearchActivity_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[4];
                d.SearchActivity_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<int>)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityStatus>
                __ActivityByInternalIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityStatus>(
                    "ActivityByInternalId",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByInternalId_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByInternalId_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByInternalId_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByInternalId_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByInternalId_PreprocessQuery);
            private static bool __ActivityByInternalId_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivityByInternalId_CanExecute(ref r);
                return r;
            }
            private static void __ActivityByInternalId_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByInternalId_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ActivityByInternalId_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByInternalId_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityStatus>)args[1]);
            }
            private static void __ActivityByInternalId_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityByInternalId_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ActivityByInternalId_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityStatus> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityStatus>)args[1];
                d.ActivityByInternalId_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>
                __SearchSchoolEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SchoolPart>(
                    "SearchSchool",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchSchool_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchSchool_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchSchool_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchSchool_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchSchool_PreprocessQuery);
            private static bool __SearchSchool_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SearchSchool_CanExecute(ref r);
                return r;
            }
            private static void __SearchSchool_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchSchool_Executing((string)args[0]);
            }
            private static void __SearchSchool_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchSchool_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart>)args[1]);
            }
            private static void __SearchSchool_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SearchSchool_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SearchSchool_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SchoolPart>)args[1];
                d.SearchSchool_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>
                __CounselorsSortByNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>(
                    "CounselorsSortByName",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsSortByName_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsSortByName_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsSortByName_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsSortByName_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorsSortByName_PreprocessQuery);
            private static bool __CounselorsSortByName_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CounselorsSortByName_CanExecute(ref r);
                return r;
            }
            private static void __CounselorsSortByName_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsSortByName_Executing();
            }
            private static void __CounselorsSortByName_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorsSortByName_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor>)args[0]);
            }
            private static void __CounselorsSortByName_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CounselorsSortByName_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CounselorsSortByName_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor>)args[0];
                d.CounselorsSortByName_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>
                __ActivityCounselorsByDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>(
                    "ActivityCounselorsByDate",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByDate_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByDate_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByDate_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByDate_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByDate_PreprocessQuery);
            private static bool __ActivityCounselorsByDate_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivityCounselorsByDate_CanExecute(ref r);
                return r;
            }
            private static void __ActivityCounselorsByDate_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityCounselorsByDate_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
            }
            private static void __ActivityCounselorsByDate_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityCounselorsByDate_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityCounselor>)args[3]);
            }
            private static void __ActivityCounselorsByDate_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityCounselorsByDate_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __ActivityCounselorsByDate_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor>)args[3];
                d.ActivityCounselorsByDate_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>
                __ActivityCounselorsByCounselorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ActivityCounselor>(
                    "ActivityCounselorsByCounselor",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByCounselor_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByCounselor_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByCounselor_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByCounselor_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityCounselorsByCounselor_PreprocessQuery);
            private static bool __ActivityCounselorsByCounselor_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivityCounselorsByCounselor_CanExecute(ref r);
                return r;
            }
            private static void __ActivityCounselorsByCounselor_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityCounselorsByCounselor_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ActivityCounselorsByCounselor_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityCounselorsByCounselor_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityCounselor>)args[1]);
            }
            private static void __ActivityCounselorsByCounselor_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityCounselorsByCounselor_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ActivityCounselorsByCounselor_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityCounselor>)args[1];
                d.ActivityCounselorsByCounselor_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>
                __FixCREntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>(
                    "FixCR",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FixCR_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FixCR_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FixCR_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FixCR_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FixCR_PreprocessQuery);
            private static bool __FixCR_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FixCR_CanExecute(ref r);
                return r;
            }
            private static void __FixCR_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FixCR_Executing();
            }
            private static void __FixCR_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FixCR_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CRs>)args[0]);
            }
            private static void __FixCR_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FixCR_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __FixCR_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CRs> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CRs>)args[0];
                d.FixCR_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>
                __NewDevelopmentCREntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CRs>(
                    "NewDevelopmentCR",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NewDevelopmentCR_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NewDevelopmentCR_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NewDevelopmentCR_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NewDevelopmentCR_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NewDevelopmentCR_PreprocessQuery);
            private static bool __NewDevelopmentCR_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NewDevelopmentCR_CanExecute(ref r);
                return r;
            }
            private static void __NewDevelopmentCR_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NewDevelopmentCR_Executing();
            }
            private static void __NewDevelopmentCR_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NewDevelopmentCR_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CRs>)args[0]);
            }
            private static void __NewDevelopmentCR_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NewDevelopmentCR_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __NewDevelopmentCR_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CRs> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CRs>)args[0];
                d.NewDevelopmentCR_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>
                __OrdersShowCanceledEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>(
                    "OrdersShowCanceled",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrdersShowCanceled_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrdersShowCanceled_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrdersShowCanceled_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrdersShowCanceled_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrdersShowCanceled_PreprocessQuery);
            private static bool __OrdersShowCanceled_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OrdersShowCanceled_CanExecute(ref r);
                return r;
            }
            private static void __OrdersShowCanceled_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrdersShowCanceled_Executing();
            }
            private static void __OrdersShowCanceled_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrdersShowCanceled_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders>)args[0]);
            }
            private static void __OrdersShowCanceled_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OrdersShowCanceled_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OrdersShowCanceled_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders>)args[0];
                d.OrdersShowCanceled_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>
                __OrderShowApprovedEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>(
                    "OrderShowApproved",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowApproved_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowApproved_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowApproved_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowApproved_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowApproved_PreprocessQuery);
            private static bool __OrderShowApproved_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OrderShowApproved_CanExecute(ref r);
                return r;
            }
            private static void __OrderShowApproved_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderShowApproved_Executing();
            }
            private static void __OrderShowApproved_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderShowApproved_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders>)args[0]);
            }
            private static void __OrderShowApproved_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OrderShowApproved_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OrderShowApproved_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders>)args[0];
                d.OrderShowApproved_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>
                __OrderShowWaitingForApprovedEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Orders>(
                    "OrderShowWaitingForApproved",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowWaitingForApproved_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowWaitingForApproved_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowWaitingForApproved_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowWaitingForApproved_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderShowWaitingForApproved_PreprocessQuery);
            private static bool __OrderShowWaitingForApproved_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OrderShowWaitingForApproved_CanExecute(ref r);
                return r;
            }
            private static void __OrderShowWaitingForApproved_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderShowWaitingForApproved_Executing();
            }
            private static void __OrderShowWaitingForApproved_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderShowWaitingForApproved_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Orders>)args[0]);
            }
            private static void __OrderShowWaitingForApproved_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OrderShowWaitingForApproved_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OrderShowWaitingForApproved_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Orders> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Orders>)args[0];
                d.OrderShowWaitingForApproved_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>
                __ContactsBySchoolEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contact>(
                    "ContactsBySchool",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsBySchool_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsBySchool_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsBySchool_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsBySchool_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsBySchool_PreprocessQuery);
            private static bool __ContactsBySchool_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactsBySchool_CanExecute(ref r);
                return r;
            }
            private static void __ContactsBySchool_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsBySchool_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactsBySchool_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsBySchool_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact>)args[1]);
            }
            private static void __ContactsBySchool_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactsBySchool_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactsBySchool_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contact> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contact>)args[1];
                d.ContactsBySchool_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderClassesAndCounslers>
                __OrderPricesByClassThenCounslersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderClassesAndCounslers>(
                    "OrderPricesByClassThenCounslers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPricesByClassThenCounslers_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPricesByClassThenCounslers_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPricesByClassThenCounslers_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPricesByClassThenCounslers_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderPricesByClassThenCounslers_PreprocessQuery);
            private static bool __OrderPricesByClassThenCounslers_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.OrderPricesByClassThenCounslers_CanExecute(ref r);
                return r;
            }
            private static void __OrderPricesByClassThenCounslers_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderPricesByClassThenCounslers_Executing();
            }
            private static void __OrderPricesByClassThenCounslers_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.OrderPricesByClassThenCounslers_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.OrderClassesAndCounslers>)args[0]);
            }
            private static void __OrderPricesByClassThenCounslers_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.OrderPricesByClassThenCounslers_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __OrderPricesByClassThenCounslers_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.OrderClassesAndCounslers> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.OrderClassesAndCounslers>)args[0];
                d.OrderPricesByClassThenCounslers_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __ActivitiesByCounselorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "ActivitiesByCounselor",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivitiesByCounselor_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivitiesByCounselor_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivitiesByCounselor_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivitiesByCounselor_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivitiesByCounselor_PreprocessQuery);
            private static bool __ActivitiesByCounselor_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivitiesByCounselor_CanExecute(ref r);
                return r;
            }
            private static void __ActivitiesByCounselor_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivitiesByCounselor_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ActivitiesByCounselor_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivitiesByCounselor_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[1]);
            }
            private static void __ActivitiesByCounselor_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivitiesByCounselor_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ActivitiesByCounselor_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[1];
                d.ActivitiesByCounselor_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __PastActivitiesByCounselorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "PastActivitiesByCounselor",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PastActivitiesByCounselor_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PastActivitiesByCounselor_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PastActivitiesByCounselor_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PastActivitiesByCounselor_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PastActivitiesByCounselor_PreprocessQuery);
            private static bool __PastActivitiesByCounselor_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PastActivitiesByCounselor_CanExecute(ref r);
                return r;
            }
            private static void __PastActivitiesByCounselor_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PastActivitiesByCounselor_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __PastActivitiesByCounselor_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PastActivitiesByCounselor_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[1]);
            }
            private static void __PastActivitiesByCounselor_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PastActivitiesByCounselor_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __PastActivitiesByCounselor_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[1];
                d.PastActivitiesByCounselor_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __FutureActivitiesByCounselorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "FutureActivitiesByCounselor",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FutureActivitiesByCounselor_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FutureActivitiesByCounselor_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FutureActivitiesByCounselor_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FutureActivitiesByCounselor_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FutureActivitiesByCounselor_PreprocessQuery);
            private static bool __FutureActivitiesByCounselor_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FutureActivitiesByCounselor_CanExecute(ref r);
                return r;
            }
            private static void __FutureActivitiesByCounselor_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FutureActivitiesByCounselor_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __FutureActivitiesByCounselor_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FutureActivitiesByCounselor_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[1]);
            }
            private static void __FutureActivitiesByCounselor_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FutureActivitiesByCounselor_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FutureActivitiesByCounselor_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[1];
                d.FutureActivitiesByCounselor_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>
                __CounselorByUserPassEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Counselor>(
                    "CounselorByUserPass",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorByUserPass_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorByUserPass_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorByUserPass_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorByUserPass_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CounselorByUserPass_PreprocessQuery);
            private static bool __CounselorByUserPass_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CounselorByUserPass_CanExecute(ref r);
                return r;
            }
            private static void __CounselorByUserPass_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorByUserPass_Executing((string)args[0], (string)args[1]);
            }
            private static void __CounselorByUserPass_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CounselorByUserPass_Executed((string)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Counselor>)args[2]);
            }
            private static void __CounselorByUserPass_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CounselorByUserPass_ExecuteFailed((string)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __CounselorByUserPass_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Counselor>)args[2];
                d.CounselorByUserPass_PreprocessQuery((string)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __FuturesActivitiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "FuturesActivities",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FuturesActivities_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FuturesActivities_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FuturesActivities_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FuturesActivities_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FuturesActivities_PreprocessQuery);
            private static bool __FuturesActivities_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FuturesActivities_CanExecute(ref r);
                return r;
            }
            private static void __FuturesActivities_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FuturesActivities_Executing();
            }
            private static void __FuturesActivities_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FuturesActivities_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[0]);
            }
            private static void __FuturesActivities_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FuturesActivities_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __FuturesActivities_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[0];
                d.FuturesActivities_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>
                __ActivityByDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Activity>(
                    "ActivityByDate",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDate_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDate_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDate_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDate_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActivityByDate_PreprocessQuery);
            private static bool __ActivityByDate_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActivityByDate_CanExecute(ref r);
                return r;
            }
            private static void __ActivityByDate_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByDate_Executing((global::System.Nullable<global::System.DateTime>)args[0]);
            }
            private static void __ActivityByDate_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActivityByDate_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Activity>)args[1]);
            }
            private static void __ActivityByDate_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityByDate_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ActivityByDate_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Activity> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Activity>)args[1];
                d.ActivityByDate_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the BinyaminReportData datasource.
    /// </summary>
    public sealed partial class BinyaminReportDataService
        : global::LightSwitchApplication.BinyaminReportData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BinyaminReportDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityViews_Validate(global::LightSwitchApplication.ActivityView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolViews_Validate(global::LightSwitchApplication.SchoolView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportSchoolViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportSchoolViews_Validate(global::LightSwitchApplication.ReportSchoolView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LectureViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LectureViews_Validate(global::LightSwitchApplication.LectureView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorViews_Validate(global::LightSwitchApplication.CounselorView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void frequencyViews_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void frequencyViews_Validate(global::LightSwitchApplication.frequencyView entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SummaryYears_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SummaryYears_Validate(global::LightSwitchApplication.SummaryYear entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityViews_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityViews_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityViews_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityViews_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivityViews_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedByDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedByDate_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedByDate_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedByDate_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedByDate_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ByDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ByDistrict_Executing(global::System.Nullable<int> DistrictId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ByDistrict_PreprocessQuery(global::System.Nullable<int> DistrictId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ByDistrict_Executed(global::System.Nullable<int> DistrictId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ByDistrict_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromToDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FromToDate_Executing(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromToDate_PreprocessQuery(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FromToDate_Executed(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FromToDate_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissingCounselors_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MissingCounselors_Executing(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<bool> ShowOnlyMissingCounselors);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MissingCounselors_PreprocessQuery(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<bool> ShowOnlyMissingCounselors, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MissingCounselors_Executed(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<bool> ShowOnlyMissingCounselors, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MissingCounselors_ExecuteFailed(global::System.Nullable<int> DistrictId, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate, global::System.Nullable<bool> ShowOnlyMissingCounselors, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivitiesByCounselor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivitiesByCounselor_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActivitiesByCounselor_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByDate_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByDate_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByDate_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByDate_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrict_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrict_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrict_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrict_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByAudience_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudience_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByAudience_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudience_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudience_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByCity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByCity_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string city);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByCity_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string city, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByCity_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string city, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByCity_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string city, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndCity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndCity_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string city);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndCity_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string city, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndCity_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string city, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndCity_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string city, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndAudience_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudience_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndAudience_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudience_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudience_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByAudienceAndCity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudienceAndCity_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, string city);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewByAudienceAndCity_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, string city, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudienceAndCity_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, string city, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewByAudienceAndCity_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string audience, string city, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndAudienceAndCity_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudienceAndCity_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, string city);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetLectureViewBydistrictAndAudienceAndCity_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, string city, ref global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudienceAndCity_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, string city, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetLectureViewBydistrictAndAudienceAndCity_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, string audience, string city, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetCounselorData_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetCounselorData_Executing(global::System.Nullable<int> CounselorId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetCounselorData_PreprocessQuery(global::System.Nullable<int> CounselorId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.CounselorView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetCounselorData_Executed(global::System.Nullable<int> CounselorId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CounselorView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetCounselorData_ExecuteFailed(global::System.Nullable<int> CounselorId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDate_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDate_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDate_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDate_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByAud_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByAud_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByAud_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByAud_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByAud_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDistrictAndAud_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrictAndAud_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, string district);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDistrictAndAud_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, string district, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrictAndAud_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, string district, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrictAndAud_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string aud, string district, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByType_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByType_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByType_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByType_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByType_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByDistrictAndType_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByDistrictAndType_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, string district);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewByDistrictAndType_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, string district, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByDistrictAndType_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, string district, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewByDistrictAndType_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string type, string district, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDistrict_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrict_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetfrequencyViewBYDistrict_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, ref global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrict_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetfrequencyViewBYDistrict_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, string district, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSummaryYearViewBYDate_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYDate_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSummaryYearViewBYDate_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYDate_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SummaryYear> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYDate_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSummaryYearViewBYYear_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYYear_Executing(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSummaryYearViewBYYear_PreprocessQuery(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYYear_Executed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SummaryYear> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSummaryYearViewBYYear_ExecuteFailed(global::System.Nullable<global::System.DateTime> start, global::System.Nullable<global::System.DateTime> c_end, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __ActivityViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "ActivityViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_Validate,
                    null);
            private static bool __ActivityViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.ActivityViews_CanRead(ref result);
                return result;
            }
            private static void __ActivityViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ActivityViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SchoolView>
                __SchoolViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SchoolView>(
                    "SchoolViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SchoolViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SchoolViews_Validate,
                    null);
            private static bool __SchoolViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.SchoolViews_CanRead(ref result);
                return result;
            }
            private static void __SchoolViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.SchoolView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SchoolViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ReportSchoolView>
                __ReportSchoolViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ReportSchoolView>(
                    "ReportSchoolViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ReportSchoolViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ReportSchoolViews_Validate,
                    null);
            private static bool __ReportSchoolViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.ReportSchoolViews_CanRead(ref result);
                return result;
            }
            private static void __ReportSchoolViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.ReportSchoolView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReportSchoolViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __LectureViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "LectureViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__LectureViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__LectureViews_Validate,
                    null);
            private static bool __LectureViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.LectureViews_CanRead(ref result);
                return result;
            }
            private static void __LectureViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.LectureViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.CounselorView>
                __CounselorViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.CounselorView>(
                    "CounselorViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__CounselorViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__CounselorViews_Validate,
                    null);
            private static bool __CounselorViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.CounselorViews_CanRead(ref result);
                return result;
            }
            private static void __CounselorViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CounselorViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __frequencyViewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "frequencyViews",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__frequencyViews_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__frequencyViews_Validate,
                    null);
            private static bool __frequencyViews_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.frequencyViews_CanRead(ref result);
                return result;
            }
            private static void __frequencyViews_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.frequencyView e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.frequencyViews_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>
                __SummaryYearsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>(
                    "SummaryYears",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SummaryYears_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SummaryYears_Validate,
                    null);
            private static bool __SummaryYears_CanRead(global::LightSwitchApplication.BinyaminReportDataService d)
            {
                bool result = true;
                d.SummaryYears_CanRead(ref result);
                return result;
            }
            private static void __SummaryYears_Validate(global::LightSwitchApplication.BinyaminReportDataService d, global::LightSwitchApplication.SummaryYear e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SummaryYears_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.BinyaminReportDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.BinyaminReportDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __ActivityViews_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "ActivityViews_All",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_All_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_All_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_All_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_All_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivityViews_All_PreprocessQuery);
            private static bool __ActivityViews_All_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.ActivityViews_All_CanExecute(ref r);
                return r;
            }
            private static void __ActivityViews_All_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ActivityViews_All_Executing();
            }
            private static void __ActivityViews_All_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ActivityViews_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[0]);
            }
            private static void __ActivityViews_All_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivityViews_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ActivityViews_All_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[0];
                d.ActivityViews_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __SortedByDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "SortedByDate",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SortedByDate_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SortedByDate_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SortedByDate_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SortedByDate_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__SortedByDate_PreprocessQuery);
            private static bool __SortedByDate_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.SortedByDate_CanExecute(ref r);
                return r;
            }
            private static void __SortedByDate_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.SortedByDate_Executing();
            }
            private static void __SortedByDate_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.SortedByDate_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[0]);
            }
            private static void __SortedByDate_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.SortedByDate_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortedByDate_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[0];
                d.SortedByDate_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __ByDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "ByDistrict",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ByDistrict_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ByDistrict_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ByDistrict_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ByDistrict_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ByDistrict_PreprocessQuery);
            private static bool __ByDistrict_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.ByDistrict_CanExecute(ref r);
                return r;
            }
            private static void __ByDistrict_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ByDistrict_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ByDistrict_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ByDistrict_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[1]);
            }
            private static void __ByDistrict_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.ByDistrict_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ByDistrict_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[1];
                d.ByDistrict_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __FromToDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "FromToDate",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__FromToDate_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__FromToDate_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__FromToDate_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__FromToDate_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__FromToDate_PreprocessQuery);
            private static bool __FromToDate_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.FromToDate_CanExecute(ref r);
                return r;
            }
            private static void __FromToDate_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.FromToDate_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
            }
            private static void __FromToDate_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.FromToDate_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[3]);
            }
            private static void __FromToDate_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.FromToDate_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __FromToDate_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[3];
                d.FromToDate_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __MissingCounselorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "MissingCounselors",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__MissingCounselors_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__MissingCounselors_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__MissingCounselors_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__MissingCounselors_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__MissingCounselors_PreprocessQuery);
            private static bool __MissingCounselors_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.MissingCounselors_CanExecute(ref r);
                return r;
            }
            private static void __MissingCounselors_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.MissingCounselors_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<bool>)args[3]);
            }
            private static void __MissingCounselors_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.MissingCounselors_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[4]);
            }
            private static void __MissingCounselors_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.MissingCounselors_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<bool>)args[3], ex);
            }
            private static global::System.Linq.IQueryable __MissingCounselors_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[4];
                d.MissingCounselors_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<bool>)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>
                __ActivitiesByCounselorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.ActivityView>(
                    "ActivitiesByCounselor",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivitiesByCounselor_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivitiesByCounselor_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivitiesByCounselor_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivitiesByCounselor_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__ActivitiesByCounselor_PreprocessQuery);
            private static bool __ActivitiesByCounselor_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.ActivitiesByCounselor_CanExecute(ref r);
                return r;
            }
            private static void __ActivitiesByCounselor_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ActivitiesByCounselor_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ActivitiesByCounselor_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.ActivitiesByCounselor_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ActivityView>)args[1]);
            }
            private static void __ActivitiesByCounselor_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.ActivitiesByCounselor_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ActivitiesByCounselor_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ActivityView>)args[1];
                d.ActivitiesByCounselor_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewByDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewByDate",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByDate_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByDate_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByDate_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByDate_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByDate_PreprocessQuery);
            private static bool __GetLectureViewByDate_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewByDate_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewByDate_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByDate_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1]);
            }
            private static void __GetLectureViewByDate_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByDate_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[2]);
            }
            private static void __GetLectureViewByDate_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewByDate_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewByDate_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[2];
                d.GetLectureViewByDate_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewBydistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewBydistrict",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrict_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrict_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrict_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrict_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrict_PreprocessQuery);
            private static bool __GetLectureViewBydistrict_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewBydistrict_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewBydistrict_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrict_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetLectureViewBydistrict_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrict_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[3]);
            }
            private static void __GetLectureViewBydistrict_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewBydistrict_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewBydistrict_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[3];
                d.GetLectureViewBydistrict_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewByAudienceEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewByAudience",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudience_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudience_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudience_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudience_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudience_PreprocessQuery);
            private static bool __GetLectureViewByAudience_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewByAudience_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewByAudience_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByAudience_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetLectureViewByAudience_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByAudience_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[3]);
            }
            private static void __GetLectureViewByAudience_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewByAudience_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewByAudience_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[3];
                d.GetLectureViewByAudience_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewByCityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewByCity",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByCity_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByCity_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByCity_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByCity_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByCity_PreprocessQuery);
            private static bool __GetLectureViewByCity_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewByCity_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewByCity_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByCity_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetLectureViewByCity_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByCity_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[3]);
            }
            private static void __GetLectureViewByCity_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewByCity_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewByCity_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[3];
                d.GetLectureViewByCity_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewBydistrictAndCityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewBydistrictAndCity",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndCity_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndCity_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndCity_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndCity_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndCity_PreprocessQuery);
            private static bool __GetLectureViewBydistrictAndCity_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewBydistrictAndCity_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewBydistrictAndCity_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndCity_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3]);
            }
            private static void __GetLectureViewBydistrictAndCity_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndCity_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[4]);
            }
            private static void __GetLectureViewBydistrictAndCity_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewBydistrictAndCity_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewBydistrictAndCity_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[4];
                d.GetLectureViewBydistrictAndCity_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewBydistrictAndAudienceEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewBydistrictAndAudience",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudience_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudience_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudience_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudience_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudience_PreprocessQuery);
            private static bool __GetLectureViewBydistrictAndAudience_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewBydistrictAndAudience_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewBydistrictAndAudience_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndAudience_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3]);
            }
            private static void __GetLectureViewBydistrictAndAudience_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndAudience_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[4]);
            }
            private static void __GetLectureViewBydistrictAndAudience_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewBydistrictAndAudience_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewBydistrictAndAudience_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[4];
                d.GetLectureViewBydistrictAndAudience_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewByAudienceAndCityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewByAudienceAndCity",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudienceAndCity_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudienceAndCity_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudienceAndCity_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudienceAndCity_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewByAudienceAndCity_PreprocessQuery);
            private static bool __GetLectureViewByAudienceAndCity_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewByAudienceAndCity_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewByAudienceAndCity_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByAudienceAndCity_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3]);
            }
            private static void __GetLectureViewByAudienceAndCity_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewByAudienceAndCity_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[4]);
            }
            private static void __GetLectureViewByAudienceAndCity_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewByAudienceAndCity_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewByAudienceAndCity_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[4];
                d.GetLectureViewByAudienceAndCity_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>
                __GetLectureViewBydistrictAndAudienceAndCityEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.LectureView>(
                    "GetLectureViewBydistrictAndAudienceAndCity",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudienceAndCity_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudienceAndCity_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudienceAndCity_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudienceAndCity_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetLectureViewBydistrictAndAudienceAndCity_PreprocessQuery);
            private static bool __GetLectureViewBydistrictAndAudienceAndCity_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetLectureViewBydistrictAndAudienceAndCity_CanExecute(ref r);
                return r;
            }
            private static void __GetLectureViewBydistrictAndAudienceAndCity_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndAudienceAndCity_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (string)args[4]);
            }
            private static void __GetLectureViewBydistrictAndAudienceAndCity_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetLectureViewBydistrictAndAudienceAndCity_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (string)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.LectureView>)args[5]);
            }
            private static void __GetLectureViewBydistrictAndAudienceAndCity_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetLectureViewBydistrictAndAudienceAndCity_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (string)args[4], ex);
            }
            private static global::System.Linq.IQueryable __GetLectureViewBydistrictAndAudienceAndCity_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.LectureView>)args[5];
                d.GetLectureViewBydistrictAndAudienceAndCity_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (string)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.CounselorView>
                __GetCounselorDataEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.CounselorView>(
                    "GetCounselorData",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetCounselorData_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetCounselorData_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetCounselorData_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetCounselorData_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetCounselorData_PreprocessQuery);
            private static bool __GetCounselorData_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetCounselorData_CanExecute(ref r);
                return r;
            }
            private static void __GetCounselorData_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetCounselorData_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __GetCounselorData_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetCounselorData_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CounselorView>)args[1]);
            }
            private static void __GetCounselorData_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetCounselorData_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetCounselorData_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CounselorView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CounselorView>)args[1];
                d.GetCounselorData_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewBYDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewBYDate",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDate_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDate_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDate_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDate_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDate_PreprocessQuery);
            private static bool __GetfrequencyViewBYDate_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewBYDate_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewBYDate_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDate_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1]);
            }
            private static void __GetfrequencyViewBYDate_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDate_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[2]);
            }
            private static void __GetfrequencyViewBYDate_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewBYDate_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewBYDate_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[2];
                d.GetfrequencyViewBYDate_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewByAudEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewByAud",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByAud_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByAud_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByAud_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByAud_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByAud_PreprocessQuery);
            private static bool __GetfrequencyViewByAud_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewByAud_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewByAud_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByAud_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetfrequencyViewByAud_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByAud_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[3]);
            }
            private static void __GetfrequencyViewByAud_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewByAud_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewByAud_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[3];
                d.GetfrequencyViewByAud_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewBYDistrictAndAudEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewBYDistrictAndAud",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrictAndAud_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrictAndAud_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrictAndAud_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrictAndAud_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrictAndAud_PreprocessQuery);
            private static bool __GetfrequencyViewBYDistrictAndAud_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewBYDistrictAndAud_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewBYDistrictAndAud_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDistrictAndAud_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3]);
            }
            private static void __GetfrequencyViewBYDistrictAndAud_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDistrictAndAud_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[4]);
            }
            private static void __GetfrequencyViewBYDistrictAndAud_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewBYDistrictAndAud_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewBYDistrictAndAud_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[4];
                d.GetfrequencyViewBYDistrictAndAud_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewByTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewByType",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByType_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByType_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByType_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByType_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByType_PreprocessQuery);
            private static bool __GetfrequencyViewByType_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewByType_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewByType_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByType_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetfrequencyViewByType_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByType_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[3]);
            }
            private static void __GetfrequencyViewByType_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewByType_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewByType_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[3];
                d.GetfrequencyViewByType_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewByDistrictAndTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewByDistrictAndType",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByDistrictAndType_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByDistrictAndType_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByDistrictAndType_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByDistrictAndType_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewByDistrictAndType_PreprocessQuery);
            private static bool __GetfrequencyViewByDistrictAndType_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewByDistrictAndType_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewByDistrictAndType_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByDistrictAndType_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3]);
            }
            private static void __GetfrequencyViewByDistrictAndType_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewByDistrictAndType_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[4]);
            }
            private static void __GetfrequencyViewByDistrictAndType_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewByDistrictAndType_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewByDistrictAndType_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[4];
                d.GetfrequencyViewByDistrictAndType_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>
                __GetfrequencyViewBYDistrictEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.frequencyView>(
                    "GetfrequencyViewBYDistrict",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrict_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrict_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrict_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrict_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetfrequencyViewBYDistrict_PreprocessQuery);
            private static bool __GetfrequencyViewBYDistrict_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetfrequencyViewBYDistrict_CanExecute(ref r);
                return r;
            }
            private static void __GetfrequencyViewBYDistrict_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDistrict_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2]);
            }
            private static void __GetfrequencyViewBYDistrict_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetfrequencyViewBYDistrict_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.frequencyView>)args[3]);
            }
            private static void __GetfrequencyViewBYDistrict_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetfrequencyViewBYDistrict_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ex);
            }
            private static global::System.Linq.IQueryable __GetfrequencyViewBYDistrict_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.frequencyView>)args[3];
                d.GetfrequencyViewBYDistrict_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (string)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>
                __GetSummaryYearViewBYDateEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>(
                    "GetSummaryYearViewBYDate",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYDate_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYDate_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYDate_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYDate_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYDate_PreprocessQuery);
            private static bool __GetSummaryYearViewBYDate_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetSummaryYearViewBYDate_CanExecute(ref r);
                return r;
            }
            private static void __GetSummaryYearViewBYDate_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetSummaryYearViewBYDate_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1]);
            }
            private static void __GetSummaryYearViewBYDate_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetSummaryYearViewBYDate_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SummaryYear>)args[2]);
            }
            private static void __GetSummaryYearViewBYDate_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetSummaryYearViewBYDate_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetSummaryYearViewBYDate_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear>)args[2];
                d.GetSummaryYearViewBYDate_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>
                __GetSummaryYearViewBYYearEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.BinyaminReportDataService, global::LightSwitchApplication.SummaryYear>(
                    "GetSummaryYearViewBYYear",
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYYear_CanExecute,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYYear_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYYear_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYYear_Failed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__GetSummaryYearViewBYYear_PreprocessQuery);
            private static bool __GetSummaryYearViewBYYear_CanExecute(global::LightSwitchApplication.BinyaminReportDataService d, bool r)
            {
                d.GetSummaryYearViewBYYear_CanExecute(ref r);
                return r;
            }
            private static void __GetSummaryYearViewBYYear_Executing(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetSummaryYearViewBYYear_Executing((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1]);
            }
            private static void __GetSummaryYearViewBYYear_Executed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                d.GetSummaryYearViewBYYear_Executed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SummaryYear>)args[2]);
            }
            private static void __GetSummaryYearViewBYYear_Failed(global::LightSwitchApplication.BinyaminReportDataService d, object[] args, global::System.Exception ex)
            {
                d.GetSummaryYearViewBYYear_ExecuteFailed((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetSummaryYearViewBYYear_PreprocessQuery(global::LightSwitchApplication.BinyaminReportDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SummaryYear>)args[2];
                d.GetSummaryYearViewBYYear_PreprocessQuery((global::System.Nullable<global::System.DateTime>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.BinyaminReportDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.BinyaminReportDataService>(
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.BinyaminReportDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.BinyaminReportDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.BinyaminReportDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.BinyaminReportDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
