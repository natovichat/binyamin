

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class SchoolType : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the SchoolType entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SchoolType()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SchoolType(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SchoolType> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.SchoolType.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolType_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolType_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.SchoolType.DetailsClass.GetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.SchoolType.DetailsClass.SetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.SchoolType.DetailsClass.GetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.SchoolType.DetailsClass.SetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.SchoolType.DetailsClass.GetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.SchoolType.DetailsClass.SetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.SchoolPart> SchoolParts
        {
            get
            {
                return global::LightSwitchApplication.SchoolType.DetailsClass.GetValue(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.SchoolParts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SchoolPart> SchoolPartsQuery
        {
            get
            {
                return global::LightSwitchApplication.SchoolType.DetailsClass.GetQuery(this, global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.SchoolParts);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.SchoolType,
                global::LightSwitchApplication.SchoolType.DetailsClass,
                global::LightSwitchApplication.SchoolType.DetailsClass.IImplementation,
                global::LightSwitchApplication.SchoolType.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>.Entry
                __SchoolTypeEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>.Entry(
                    global::LightSwitchApplication.SchoolType.DetailsClass.__SchoolType_CreateNew,
                    global::LightSwitchApplication.SchoolType.DetailsClass.__SchoolType_Created,
                    global::LightSwitchApplication.SchoolType.DetailsClass.__SchoolType_AllowSaveWithErrors);
            private static global::LightSwitchApplication.SchoolType __SchoolType_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.SchoolType> es)
            {
                return new global::LightSwitchApplication.SchoolType(es);
            }
            private static void __SchoolType_Created(global::LightSwitchApplication.SchoolType e)
            {
                e.SchoolType_Created();
            }
            private static bool __SchoolType_AllowSaveWithErrors(global::LightSwitchApplication.SchoolType e)
            {
                bool result = false;
                e.SchoolType_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.SchoolType.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart> SchoolParts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.SchoolParts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string Title { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable SchoolParts { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SchoolType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int>.Data> c, global::LightSwitchApplication.SchoolType.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.SchoolType e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.SchoolType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.SchoolType e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SchoolType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string>.Data> c, global::LightSwitchApplication.SchoolType.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.SchoolType e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.SchoolType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.SchoolType e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SchoolType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.SchoolType.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.SchoolType e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.SchoolType e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.SchoolType.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.SchoolType e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart>.Entry
                    SchoolParts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart>.Entry(
                        "SchoolParts",
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._SchoolParts_Stub,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._SchoolParts_GetReferencedEntities,
                        global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties._SchoolParts_GetEntityCollection);
                private static void _SchoolParts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SchoolType.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart>.Data> c, global::LightSwitchApplication.SchoolType.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolParts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SchoolPart> _SchoolParts_GetReferencedEntities(global::LightSwitchApplication.SchoolType.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.SchoolPart, global::LightSwitchApplication.SchoolPart.DetailsClass>(global::LightSwitchApplication.SchoolType.DetailsClass.PropertySetProperties.SchoolParts, ref d._SchoolParts);
                }
                private static global::System.Collections.IEnumerable _SchoolParts_GetEntityCollection(global::LightSwitchApplication.SchoolType.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolParts;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.SchoolType, global::LightSwitchApplication.SchoolType.DetailsClass, global::LightSwitchApplication.SchoolPart>.Data _SchoolParts;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Round : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Round entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Round()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Round(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Round> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Round.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Round_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Round_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StartTime);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StartTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> StopTime
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StopTime);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StopTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfStudentInMeeting
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfStudentInMeeting);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfStudentInMeeting, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfStudentInMeeting_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfStudentInMeeting_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfStudentInMeeting_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfMeetingsInRound
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfMeetingsInRound);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfMeetingsInRound, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfMeetingsInRound_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfMeetingsInRound_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfMeetingsInRound_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Start_Stop
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Start_Stop);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Start_Stop_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Start_Stop_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Meeting> Meetings
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Meetings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Meeting> MeetingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetQuery(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Meetings);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Activity Activity
        {
            get
            {
                return global::LightSwitchApplication.Round.DetailsClass.GetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity);
            }
            set
            {
                global::LightSwitchApplication.Round.DetailsClass.SetValue(this, global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Round,
                global::LightSwitchApplication.Round.DetailsClass,
                global::LightSwitchApplication.Round.DetailsClass.IImplementation,
                global::LightSwitchApplication.Round.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>.Entry
                __RoundEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>.Entry(
                    global::LightSwitchApplication.Round.DetailsClass.__Round_CreateNew,
                    global::LightSwitchApplication.Round.DetailsClass.__Round_Created,
                    global::LightSwitchApplication.Round.DetailsClass.__Round_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Round __Round_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Round> es)
            {
                return new global::LightSwitchApplication.Round(es);
            }
            private static void __Round_Created(global::LightSwitchApplication.Round e)
            {
                e.Round_Created();
            }
            private static bool __Round_AllowSaveWithErrors(global::LightSwitchApplication.Round e)
            {
                bool result = false;
                e.Round_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Round.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>> StartTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StartTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>> StopTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.StopTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int> NumberOfStudentInMeeting
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfStudentInMeeting) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int> NumberOfMeetingsInRound
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.NumberOfMeetingsInRound) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string> Start_Stop
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Start_Stop) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting> Meetings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Meetings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity> Activity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.Nullable<global::System.DateTime> StartTime { get; set; }
                new global::System.Nullable<global::System.DateTime> StopTime { get; set; }
                new int NumberOfStudentInMeeting { get; set; }
                new int NumberOfMeetingsInRound { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.Collections.IEnumerable Meetings { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Activity { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    StartTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "StartTime",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StartTime_OnValueChanged);
                private static void _StartTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._StartTime, sf);
                }
                private static bool _StartTime_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.StartTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartTime_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _StartTime_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.StartTime;
                }
                private static void _StartTime_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.StartTime = global::LightSwitchApplication.Round.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartTime_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.StartTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    StopTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "StopTime",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._StopTime_OnValueChanged);
                private static void _StopTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._StopTime, sf);
                }
                private static bool _StopTime_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.StopTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StopTime_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StopTime_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _StopTime_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.StopTime;
                }
                private static void _StopTime_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.StopTime = global::LightSwitchApplication.Round.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StopTime_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.StopTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry
                    NumberOfStudentInMeeting = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry(
                        "NumberOfStudentInMeeting",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfStudentInMeeting_OnValueChanged);
                private static void _NumberOfStudentInMeeting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfStudentInMeeting, sf);
                }
                private static bool _NumberOfStudentInMeeting_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.NumberOfStudentInMeeting_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfStudentInMeeting_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfStudentInMeeting_Validate(r);
                }
                private static int _NumberOfStudentInMeeting_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfStudentInMeeting;
                }
                private static void _NumberOfStudentInMeeting_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfStudentInMeeting = v;
                }
                private static void _NumberOfStudentInMeeting_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.NumberOfStudentInMeeting_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry
                    NumberOfMeetingsInRound = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Entry(
                        "NumberOfMeetingsInRound",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._NumberOfMeetingsInRound_OnValueChanged);
                private static void _NumberOfMeetingsInRound_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfMeetingsInRound, sf);
                }
                private static bool _NumberOfMeetingsInRound_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.NumberOfMeetingsInRound_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfMeetingsInRound_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfMeetingsInRound_Validate(r);
                }
                private static int _NumberOfMeetingsInRound_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfMeetingsInRound;
                }
                private static void _NumberOfMeetingsInRound_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfMeetingsInRound = v;
                }
                private static void _NumberOfMeetingsInRound_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.NumberOfMeetingsInRound_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string>.Entry
                    Start_Stop = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string>.Entry(
                        "Start_Stop",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Start_Stop_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Start_Stop_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Start_Stop_ComputeValue);
                private static void _Start_Stop_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._Start_Stop, sf);
                }
                private static void _Start_Stop_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Start_Stop_Validate(r);
                }
                private static string _Start_Stop_ComputeValue(global::LightSwitchApplication.Round e)
                {
                    string value = default(string);
                    e.Start_Stop_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting>.Entry
                    Meetings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting>.Entry(
                        "Meetings",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Meetings_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Meetings_GetReferencedEntities,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Meetings_GetEntityCollection);
                private static void _Meetings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._Meetings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Meeting> _Meetings_GetReferencedEntities(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Meeting, global::LightSwitchApplication.Meeting.DetailsClass>(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Meetings, ref d._Meetings);
                }
                private static global::System.Collections.IEnumerable _Meetings_GetEntityCollection(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.Meetings;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activity",
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_Stub,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_Validate,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_GetCoreImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_GetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_SetImplementationValue,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_Refresh,
                        global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties._Activity_OnValueChanged);
                private static void _Activity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Round.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.Round.DetailsClass d, object sf)
                {
                    c(d, ref d._Activity, sf);
                }
                private static bool _Activity_ComputeIsReadOnly(global::LightSwitchApplication.Round e)
                {
                    bool result = false;
                    e.Activity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Activity_Validate(global::LightSwitchApplication.Round e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Activity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Activity_GetCoreImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.ImplementationEntity.Activity;
                }
                private static global::LightSwitchApplication.Activity _Activity_GetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass d, global::LightSwitchApplication.Activity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity, ref d._Activity, (i, ev) => i.Activity = ev, v);
                }
                private static void _Activity_Refresh(global::LightSwitchApplication.Round.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Round.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_OnValueChanged(global::LightSwitchApplication.Round e)
                {
                    e.Activity_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _StartTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _StopTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data _NumberOfStudentInMeeting;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, int>.Data _NumberOfMeetingsInRound;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, string>.Data _Start_Stop;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Meeting>.Data _Meetings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Round, global::LightSwitchApplication.Round.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activity;
            
        }
    
        #endregion
    }
    
    #endregion
}
