

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class LectureView : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the LectureView entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LectureView()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LectureView(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.LectureView> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.LectureView.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LectureView_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LectureView_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityTopic
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopic);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfActivities
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfActivities);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfActivities, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfActivities_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfActivities_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfActivities_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfCounselors
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfCounselors);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfCounselors, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfCounselors_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfCounselors_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfCounselors_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfClasses
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfClasses);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfClasses, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfClasses_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfClasses_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfClasses_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityType
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityType);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityTopicCollection
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopicCollection);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopicCollection, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopicCollection_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopicCollection_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTopicCollection_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfRounds
        {
            get
            {
                return global::LightSwitchApplication.LectureView.DetailsClass.GetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfRounds);
            }
            set
            {
                global::LightSwitchApplication.LectureView.DetailsClass.SetValue(this, global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfRounds, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRounds_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRounds_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfRounds_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.LectureView,
                global::LightSwitchApplication.LectureView.DetailsClass,
                global::LightSwitchApplication.LectureView.DetailsClass.IImplementation,
                global::LightSwitchApplication.LectureView.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopic;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>.Entry
                __LectureViewEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>.Entry(
                    global::LightSwitchApplication.LectureView.DetailsClass.__LectureView_CreateNew,
                    global::LightSwitchApplication.LectureView.DetailsClass.__LectureView_Created,
                    global::LightSwitchApplication.LectureView.DetailsClass.__LectureView_AllowSaveWithErrors);
            private static global::LightSwitchApplication.LectureView __LectureView_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.LectureView> es)
            {
                return new global::LightSwitchApplication.LectureView(es);
            }
            private static void __LectureView_Created(global::LightSwitchApplication.LectureView e)
            {
                e.LectureView_Created();
            }
            private static bool __LectureView_AllowSaveWithErrors(global::LightSwitchApplication.LectureView e)
            {
                bool result = false;
                e.LectureView_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.LectureView.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string> ActivityTopic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int> NumberOfActivities
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfActivities) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int> NumberOfCounselors
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfCounselors) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int> NumberOfClasses
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfClasses) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string> ActivityType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string> ActivityTopicCollection
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.ActivityTopicCollection) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int> NumberOfRounds
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties.NumberOfRounds) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ActivityTopic { get; set; }
                new int NumberOfActivities { get; set; }
                new int NumberOfCounselors { get; set; }
                new int NumberOfClasses { get; set; }
                new string ActivityType { get; set; }
                new string ActivityTopicCollection { get; set; }
                new int NumberOfRounds { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry
                    ActivityTopic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry(
                        "ActivityTopic",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopic_OnValueChanged);
                private static void _ActivityTopic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityTopic, sf);
                }
                private static bool _ActivityTopic_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.ActivityTopic_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityTopic_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityTopic_Validate(r);
                }
                private static string _ActivityTopic_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityTopic;
                }
                private static void _ActivityTopic_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityTopic = v;
                }
                private static void _ActivityTopic_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.ActivityTopic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry
                    NumberOfActivities = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry(
                        "NumberOfActivities",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfActivities_OnValueChanged);
                private static void _NumberOfActivities_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfActivities, sf);
                }
                private static bool _NumberOfActivities_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.NumberOfActivities_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfActivities_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfActivities_Validate(r);
                }
                private static int _NumberOfActivities_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfActivities;
                }
                private static void _NumberOfActivities_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfActivities = v;
                }
                private static void _NumberOfActivities_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.NumberOfActivities_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry
                    NumberOfCounselors = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry(
                        "NumberOfCounselors",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfCounselors_OnValueChanged);
                private static void _NumberOfCounselors_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfCounselors, sf);
                }
                private static bool _NumberOfCounselors_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.NumberOfCounselors_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfCounselors_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfCounselors_Validate(r);
                }
                private static int _NumberOfCounselors_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfCounselors;
                }
                private static void _NumberOfCounselors_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfCounselors = v;
                }
                private static void _NumberOfCounselors_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.NumberOfCounselors_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry
                    NumberOfClasses = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry(
                        "NumberOfClasses",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfClasses_OnValueChanged);
                private static void _NumberOfClasses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfClasses, sf);
                }
                private static bool _NumberOfClasses_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.NumberOfClasses_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfClasses_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfClasses_Validate(r);
                }
                private static int _NumberOfClasses_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfClasses;
                }
                private static void _NumberOfClasses_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfClasses = v;
                }
                private static void _NumberOfClasses_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.NumberOfClasses_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry
                    ActivityType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry(
                        "ActivityType",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityType_OnValueChanged);
                private static void _ActivityType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityType, sf);
                }
                private static bool _ActivityType_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.ActivityType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityType_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityType_Validate(r);
                }
                private static string _ActivityType_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityType;
                }
                private static void _ActivityType_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityType = v;
                }
                private static void _ActivityType_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.ActivityType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry
                    ActivityTopicCollection = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Entry(
                        "ActivityTopicCollection",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._ActivityTopicCollection_OnValueChanged);
                private static void _ActivityTopicCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityTopicCollection, sf);
                }
                private static bool _ActivityTopicCollection_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.ActivityTopicCollection_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityTopicCollection_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityTopicCollection_Validate(r);
                }
                private static string _ActivityTopicCollection_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityTopicCollection;
                }
                private static void _ActivityTopicCollection_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityTopicCollection = v;
                }
                private static void _ActivityTopicCollection_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.ActivityTopicCollection_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry
                    NumberOfRounds = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Entry(
                        "NumberOfRounds",
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_Stub,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_ComputeIsReadOnly,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_Validate,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_GetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_SetImplementationValue,
                        global::LightSwitchApplication.LectureView.DetailsClass.PropertySetProperties._NumberOfRounds_OnValueChanged);
                private static void _NumberOfRounds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.LectureView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data> c, global::LightSwitchApplication.LectureView.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfRounds, sf);
                }
                private static bool _NumberOfRounds_ComputeIsReadOnly(global::LightSwitchApplication.LectureView e)
                {
                    bool result = false;
                    e.NumberOfRounds_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfRounds_Validate(global::LightSwitchApplication.LectureView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfRounds_Validate(r);
                }
                private static int _NumberOfRounds_GetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfRounds;
                }
                private static void _NumberOfRounds_SetImplementationValue(global::LightSwitchApplication.LectureView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfRounds = v;
                }
                private static void _NumberOfRounds_OnValueChanged(global::LightSwitchApplication.LectureView e)
                {
                    e.NumberOfRounds_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data _ActivityTopic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data _NumberOfActivities;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data _NumberOfCounselors;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data _NumberOfClasses;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data _ActivityType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, string>.Data _ActivityTopicCollection;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.LectureView, global::LightSwitchApplication.LectureView.DetailsClass, int>.Data _NumberOfRounds;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class CounselorView : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CounselorView entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CounselorView()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CounselorView(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CounselorView> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CounselorView.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorView_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorView_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CounselorInActivity
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.CounselorInActivity);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.CounselorInActivity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TopicCollection
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.TopicCollection);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.TopicCollection, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Topic
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Topic);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Topic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchoolName
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolName);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchoolPartName
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolPartName);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolPartName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityPlace
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityPlace);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityPlace, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ActivityDate
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityDate);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Audience
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Audience);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Audience, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ActivityId
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityId);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Month
        {
            get
            {
                return global::LightSwitchApplication.CounselorView.DetailsClass.GetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Month);
            }
            set
            {
                global::LightSwitchApplication.CounselorView.DetailsClass.SetValue(this, global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Month, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Month_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Month_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Month_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CounselorView,
                global::LightSwitchApplication.CounselorView.DetailsClass,
                global::LightSwitchApplication.CounselorView.DetailsClass.IImplementation,
                global::LightSwitchApplication.CounselorView.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.CounselorInActivity;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>.Entry
                __CounselorViewEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>.Entry(
                    global::LightSwitchApplication.CounselorView.DetailsClass.__CounselorView_CreateNew,
                    global::LightSwitchApplication.CounselorView.DetailsClass.__CounselorView_Created,
                    global::LightSwitchApplication.CounselorView.DetailsClass.__CounselorView_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CounselorView __CounselorView_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CounselorView> es)
            {
                return new global::LightSwitchApplication.CounselorView(es);
            }
            private static void __CounselorView_Created(global::LightSwitchApplication.CounselorView e)
            {
                e.CounselorView_Created();
            }
            private static bool __CounselorView_AllowSaveWithErrors(global::LightSwitchApplication.CounselorView e)
            {
                bool result = false;
                e.CounselorView_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CounselorView.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> CounselorInActivity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.CounselorInActivity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> TopicCollection
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.TopicCollection) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> Topic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Topic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> SchoolName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> SchoolPartName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.SchoolPartName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> ActivityPlace
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityPlace) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime> ActivityDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string> Audience
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Audience) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int> ActivityId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.ActivityId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int> Month
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties.Month) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string CounselorInActivity { get; set; }
                new string TopicCollection { get; set; }
                new string Topic { get; set; }
                new string SchoolName { get; set; }
                new string SchoolPartName { get; set; }
                new string ActivityPlace { get; set; }
                new global::System.DateTime ActivityDate { get; set; }
                new string Audience { get; set; }
                new int ActivityId { get; set; }
                new int Month { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    CounselorInActivity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "CounselorInActivity",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._CounselorInActivity_OnValueChanged);
                private static void _CounselorInActivity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._CounselorInActivity, sf);
                }
                private static bool _CounselorInActivity_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.CounselorInActivity_IsReadOnly(ref result);
                    return result;
                }
                private static void _CounselorInActivity_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CounselorInActivity_Validate(r);
                }
                private static string _CounselorInActivity_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.CounselorInActivity;
                }
                private static void _CounselorInActivity_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CounselorInActivity = v;
                }
                private static void _CounselorInActivity_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.CounselorInActivity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    TopicCollection = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "TopicCollection",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._TopicCollection_OnValueChanged);
                private static void _TopicCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._TopicCollection, sf);
                }
                private static bool _TopicCollection_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.TopicCollection_IsReadOnly(ref result);
                    return result;
                }
                private static void _TopicCollection_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TopicCollection_Validate(r);
                }
                private static string _TopicCollection_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.TopicCollection;
                }
                private static void _TopicCollection_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TopicCollection = v;
                }
                private static void _TopicCollection_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.TopicCollection_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    Topic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "Topic",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Topic_OnValueChanged);
                private static void _Topic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._Topic, sf);
                }
                private static bool _Topic_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.Topic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Topic_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Topic_Validate(r);
                }
                private static string _Topic_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.Topic;
                }
                private static void _Topic_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Topic = v;
                }
                private static void _Topic_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.Topic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    SchoolName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "SchoolName",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolName_OnValueChanged);
                private static void _SchoolName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolName, sf);
                }
                private static bool _SchoolName_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.SchoolName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolName_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolName_Validate(r);
                }
                private static string _SchoolName_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolName;
                }
                private static void _SchoolName_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SchoolName = v;
                }
                private static void _SchoolName_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.SchoolName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    SchoolPartName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "SchoolPartName",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._SchoolPartName_OnValueChanged);
                private static void _SchoolPartName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolPartName, sf);
                }
                private static bool _SchoolPartName_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.SchoolPartName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolPartName_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolPartName_Validate(r);
                }
                private static string _SchoolPartName_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolPartName;
                }
                private static void _SchoolPartName_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SchoolPartName = v;
                }
                private static void _SchoolPartName_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.SchoolPartName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    ActivityPlace = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "ActivityPlace",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityPlace_OnValueChanged);
                private static void _ActivityPlace_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityPlace, sf);
                }
                private static bool _ActivityPlace_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.ActivityPlace_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityPlace_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityPlace_Validate(r);
                }
                private static string _ActivityPlace_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityPlace;
                }
                private static void _ActivityPlace_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityPlace = v;
                }
                private static void _ActivityPlace_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.ActivityPlace_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime>.Entry
                    ActivityDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime>.Entry(
                        "ActivityDate",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityDate_OnValueChanged);
                private static void _ActivityDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityDate, sf);
                }
                private static bool _ActivityDate_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.ActivityDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityDate_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityDate_Validate(r);
                }
                private static global::System.DateTime _ActivityDate_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityDate;
                }
                private static void _ActivityDate_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ActivityDate = global::LightSwitchApplication.CounselorView.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ActivityDate_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.ActivityDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry
                    Audience = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Entry(
                        "Audience",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Audience_OnValueChanged);
                private static void _Audience_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._Audience, sf);
                }
                private static bool _Audience_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.Audience_IsReadOnly(ref result);
                    return result;
                }
                private static void _Audience_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Audience_Validate(r);
                }
                private static string _Audience_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.Audience;
                }
                private static void _Audience_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Audience = v;
                }
                private static void _Audience_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.Audience_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Entry
                    ActivityId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Entry(
                        "ActivityId",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._ActivityId_OnValueChanged);
                private static void _ActivityId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityId, sf);
                }
                private static bool _ActivityId_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.ActivityId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityId_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityId_Validate(r);
                }
                private static int _ActivityId_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityId;
                }
                private static void _ActivityId_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ActivityId = v;
                }
                private static void _ActivityId_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.ActivityId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Entry
                    Month = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Entry(
                        "Month",
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_Stub,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_ComputeIsReadOnly,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_Validate,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_GetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_SetImplementationValue,
                        global::LightSwitchApplication.CounselorView.DetailsClass.PropertySetProperties._Month_OnValueChanged);
                private static void _Month_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CounselorView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Data> c, global::LightSwitchApplication.CounselorView.DetailsClass d, object sf)
                {
                    c(d, ref d._Month, sf);
                }
                private static bool _Month_ComputeIsReadOnly(global::LightSwitchApplication.CounselorView e)
                {
                    bool result = false;
                    e.Month_IsReadOnly(ref result);
                    return result;
                }
                private static void _Month_Validate(global::LightSwitchApplication.CounselorView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Month_Validate(r);
                }
                private static int _Month_GetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d)
                {
                    return d.ImplementationEntity.Month;
                }
                private static void _Month_SetImplementationValue(global::LightSwitchApplication.CounselorView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Month = v;
                }
                private static void _Month_OnValueChanged(global::LightSwitchApplication.CounselorView e)
                {
                    e.Month_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _CounselorInActivity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _TopicCollection;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _Topic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _SchoolName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _SchoolPartName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _ActivityPlace;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, global::System.DateTime>.Data _ActivityDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, string>.Data _Audience;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Data _ActivityId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CounselorView, global::LightSwitchApplication.CounselorView.DetailsClass, int>.Data _Month;
            
        }
    
        #endregion
    }
    
    #endregion
}
