

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ActivityCounselorCommit : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ActivityCounselorCommit entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityCounselorCommit()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityCounselorCommit(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityCounselorCommit> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommit_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityCounselorCommit_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ApprovedSummary
        {
            get
            {
                return global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.ApprovedSummary);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovedSummary_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovedSummary_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Activity Activity
        {
            get
            {
                return global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity);
            }
            set
            {
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Activity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Counselor Counselor
        {
            get
            {
                return global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor);
            }
            set
            {
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Counselor_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ActivityCounselorCommit,
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass,
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.IImplementation,
                global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>.Entry
                __ActivityCounselorCommitEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>.Entry(
                    global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.__ActivityCounselorCommit_CreateNew,
                    global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.__ActivityCounselorCommit_Created,
                    global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.__ActivityCounselorCommit_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ActivityCounselorCommit __ActivityCounselorCommit_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityCounselorCommit> es)
            {
                return new global::LightSwitchApplication.ActivityCounselorCommit(es);
            }
            private static void __ActivityCounselorCommit_Created(global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                e.ActivityCounselorCommit_Created();
            }
            private static bool __ActivityCounselorCommit_AllowSaveWithErrors(global::LightSwitchApplication.ActivityCounselorCommit e)
            {
                bool result = false;
                e.ActivityCounselorCommit_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string> ApprovedSummary
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.ApprovedSummary) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity> Activity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor> Counselor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Activity { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Counselor { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string>.Entry
                    ApprovedSummary = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string>.Entry(
                        "ApprovedSummary",
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._ApprovedSummary_Stub,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._ApprovedSummary_Validate,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._ApprovedSummary_ComputeValue);
                private static void _ApprovedSummary_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovedSummary, sf);
                }
                private static void _ApprovedSummary_Validate(global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovedSummary_Validate(r);
                }
                private static string _ApprovedSummary_ComputeValue(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    string value = default(string);
                    e.ApprovedSummary_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity>.Entry
                    Activity = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity>.Entry(
                        "Activity",
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_Stub,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_Validate,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_GetCoreImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_GetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_SetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_Refresh,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Activity_OnValueChanged);
                private static void _Activity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity>.Data> c, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, object sf)
                {
                    c(d, ref d._Activity, sf);
                }
                private static bool _Activity_ComputeIsReadOnly(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    bool result = false;
                    e.Activity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Activity_Validate(global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Activity_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Activity_GetCoreImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.ImplementationEntity.Activity;
                }
                private static global::LightSwitchApplication.Activity _Activity_GetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Activity, global::LightSwitchApplication.Activity.DetailsClass>(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, global::LightSwitchApplication.Activity v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity, ref d._Activity, (i, ev) => i.Activity = ev, v);
                }
                private static void _Activity_Refresh(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Activity, ref d._Activity);
                }
                private static void _Activity_OnValueChanged(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    e.Activity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor>.Entry
                    Counselor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor>.Entry(
                        "Counselor",
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_Stub,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_Validate,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_GetCoreImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_GetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_SetImplementationValue,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_Refresh,
                        global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties._Counselor_OnValueChanged);
                private static void _Counselor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor>.Data> c, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, object sf)
                {
                    c(d, ref d._Counselor, sf);
                }
                private static bool _Counselor_ComputeIsReadOnly(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    bool result = false;
                    e.Counselor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Counselor_Validate(global::LightSwitchApplication.ActivityCounselorCommit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Counselor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Counselor_GetCoreImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.ImplementationEntity.Counselor;
                }
                private static global::LightSwitchApplication.Counselor _Counselor_GetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Counselor, global::LightSwitchApplication.Counselor.DetailsClass>(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor);
                }
                private static void _Counselor_SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d, global::LightSwitchApplication.Counselor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor, (i, ev) => i.Counselor = ev, v);
                }
                private static void _Counselor_Refresh(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass.PropertySetProperties.Counselor, ref d._Counselor);
                }
                private static void _Counselor_OnValueChanged(global::LightSwitchApplication.ActivityCounselorCommit e)
                {
                    e.Counselor_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, string>.Data _ApprovedSummary;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Activity>.Data _Activity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ActivityCounselorCommit, global::LightSwitchApplication.ActivityCounselorCommit.DetailsClass, global::LightSwitchApplication.Counselor>.Data _Counselor;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class ActivityView : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ActivityView entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityView()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ActivityView(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityView> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ActivityView.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityView_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityView_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ActivityId
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityId);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchoolName
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolName);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ActivityDate
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityDate);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchoolPartName
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolPartName);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolPartName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolPartName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TopicCollection
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TopicCollection);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TopicCollection, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TopicCollection_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Topic
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Topic);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Topic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Topic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TotalNumberOfClasses
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfClasses);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfClasses, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfClasses_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfClasses_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfClasses_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TotalNumberOfCounselor
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfCounselor);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfCounselor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfCounselor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfCounselor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfCounselor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TotalNumberOfRounds
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfRounds);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfRounds, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfRounds_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfRounds_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalNumberOfRounds_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comments
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Comments);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Comments, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityPlace
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityPlace);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityPlace, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityPlace_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string District
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.District);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.District, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void District_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void District_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void District_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityStatusId
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityStatusId);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityStatusId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatusId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatusId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityStatusId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityType
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityType);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SchoolType
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolType);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchoolType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Contact
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Contact);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Audience
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Audience);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Audience, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audience_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DistrictId
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.DistrictId);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.DistrictId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DistrictId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DistrictId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DistrictId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HebrewDate
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.HebrewDate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HebrewDate_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HebrewDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactPhone
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ContactPhone);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ContactPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DayInWeek
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.DayInWeek);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayInWeek_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DayInWeek_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CounselorInActivity
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.CounselorInActivity);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.CounselorInActivity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CounselorInActivity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberOfAssigedCounselor
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.NumberOfAssigedCounselor);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.NumberOfAssigedCounselor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfAssigedCounselor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfAssigedCounselor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberOfAssigedCounselor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsMissingCounselors
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.IsMissingCounselors);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.IsMissingCounselors, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsMissingCounselors_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsMissingCounselors_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsMissingCounselors_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.StartTime);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.StartTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.EndTime);
            }
            set
            {
                global::LightSwitchApplication.ActivityView.DetailsClass.SetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.EndTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ActivityTime
        {
            get
            {
                return global::LightSwitchApplication.ActivityView.DetailsClass.GetValue(this, global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTime_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActivityTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ActivityView,
                global::LightSwitchApplication.ActivityView.DetailsClass,
                global::LightSwitchApplication.ActivityView.DetailsClass.IImplementation,
                global::LightSwitchApplication.ActivityView.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityId;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>.Entry
                __ActivityViewEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>.Entry(
                    global::LightSwitchApplication.ActivityView.DetailsClass.__ActivityView_CreateNew,
                    global::LightSwitchApplication.ActivityView.DetailsClass.__ActivityView_Created,
                    global::LightSwitchApplication.ActivityView.DetailsClass.__ActivityView_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ActivityView __ActivityView_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ActivityView> es)
            {
                return new global::LightSwitchApplication.ActivityView(es);
            }
            private static void __ActivityView_Created(global::LightSwitchApplication.ActivityView e)
            {
                e.ActivityView_Created();
            }
            private static bool __ActivityView_AllowSaveWithErrors(global::LightSwitchApplication.ActivityView e)
            {
                bool result = false;
                e.ActivityView_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ActivityView.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> ActivityId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> SchoolName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime> ActivityDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> SchoolPartName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolPartName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> TopicCollection
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TopicCollection) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> Topic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Topic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> TotalNumberOfClasses
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfClasses) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> TotalNumberOfCounselor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfCounselor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> TotalNumberOfRounds
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.TotalNumberOfRounds) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> Comments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Comments) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> ActivityPlace
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityPlace) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> District
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.District) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> ActivityStatusId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityStatusId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> ActivityType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> SchoolType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.SchoolType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> Contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Contact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> Audience
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.Audience) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> DistrictId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.DistrictId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> HebrewDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.HebrewDate) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> ContactPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ContactPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> DayInWeek
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.DayInWeek) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> CounselorInActivity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.CounselorInActivity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int> NumberOfAssigedCounselor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.NumberOfAssigedCounselor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool> IsMissingCounselors
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.IsMissingCounselors) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime> StartTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.StartTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime> EndTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.EndTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string> ActivityTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties.ActivityTime) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ActivityId { get; set; }
                new string SchoolName { get; set; }
                new global::System.DateTime ActivityDate { get; set; }
                new string SchoolPartName { get; set; }
                new string TopicCollection { get; set; }
                new string Topic { get; set; }
                new int TotalNumberOfClasses { get; set; }
                new int TotalNumberOfCounselor { get; set; }
                new int TotalNumberOfRounds { get; set; }
                new string Comments { get; set; }
                new string ActivityPlace { get; set; }
                new string District { get; set; }
                new string ActivityStatusId { get; set; }
                new string ActivityType { get; set; }
                new string SchoolType { get; set; }
                new string Contact { get; set; }
                new string Audience { get; set; }
                new int DistrictId { get; set; }
                new string ContactPhone { get; set; }
                new string CounselorInActivity { get; set; }
                new int NumberOfAssigedCounselor { get; set; }
                new bool IsMissingCounselors { get; set; }
                new global::System.DateTime StartTime { get; set; }
                new global::System.DateTime EndTime { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    ActivityId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "ActivityId",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityId_OnValueChanged);
                private static void _ActivityId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityId, sf);
                }
                private static bool _ActivityId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ActivityId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityId_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityId_Validate(r);
                }
                private static int _ActivityId_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityId;
                }
                private static void _ActivityId_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ActivityId = v;
                }
                private static void _ActivityId_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ActivityId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    SchoolName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "SchoolName",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolName_OnValueChanged);
                private static void _SchoolName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolName, sf);
                }
                private static bool _SchoolName_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.SchoolName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolName_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolName_Validate(r);
                }
                private static string _SchoolName_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolName;
                }
                private static void _SchoolName_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SchoolName = v;
                }
                private static void _SchoolName_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.SchoolName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry
                    ActivityDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry(
                        "ActivityDate",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityDate_OnValueChanged);
                private static void _ActivityDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityDate, sf);
                }
                private static bool _ActivityDate_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ActivityDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityDate_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityDate_Validate(r);
                }
                private static global::System.DateTime _ActivityDate_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityDate;
                }
                private static void _ActivityDate_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ActivityDate = global::LightSwitchApplication.ActivityView.DetailsClass.TruncateDate(v);
                }
                private static void _ActivityDate_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ActivityDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    SchoolPartName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "SchoolPartName",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolPartName_OnValueChanged);
                private static void _SchoolPartName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolPartName, sf);
                }
                private static bool _SchoolPartName_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.SchoolPartName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolPartName_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolPartName_Validate(r);
                }
                private static string _SchoolPartName_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolPartName;
                }
                private static void _SchoolPartName_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SchoolPartName = v;
                }
                private static void _SchoolPartName_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.SchoolPartName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    TopicCollection = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "TopicCollection",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TopicCollection_OnValueChanged);
                private static void _TopicCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._TopicCollection, sf);
                }
                private static bool _TopicCollection_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.TopicCollection_IsReadOnly(ref result);
                    return result;
                }
                private static void _TopicCollection_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TopicCollection_Validate(r);
                }
                private static string _TopicCollection_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.TopicCollection;
                }
                private static void _TopicCollection_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TopicCollection = v;
                }
                private static void _TopicCollection_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.TopicCollection_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    Topic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "Topic",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Topic_OnValueChanged);
                private static void _Topic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._Topic, sf);
                }
                private static bool _Topic_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.Topic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Topic_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Topic_Validate(r);
                }
                private static string _Topic_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.Topic;
                }
                private static void _Topic_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Topic = v;
                }
                private static void _Topic_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.Topic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    TotalNumberOfClasses = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "TotalNumberOfClasses",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfClasses_OnValueChanged);
                private static void _TotalNumberOfClasses_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalNumberOfClasses, sf);
                }
                private static bool _TotalNumberOfClasses_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.TotalNumberOfClasses_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalNumberOfClasses_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalNumberOfClasses_Validate(r);
                }
                private static int _TotalNumberOfClasses_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalNumberOfClasses;
                }
                private static void _TotalNumberOfClasses_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TotalNumberOfClasses = v;
                }
                private static void _TotalNumberOfClasses_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.TotalNumberOfClasses_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    TotalNumberOfCounselor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "TotalNumberOfCounselor",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfCounselor_OnValueChanged);
                private static void _TotalNumberOfCounselor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalNumberOfCounselor, sf);
                }
                private static bool _TotalNumberOfCounselor_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.TotalNumberOfCounselor_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalNumberOfCounselor_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalNumberOfCounselor_Validate(r);
                }
                private static int _TotalNumberOfCounselor_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalNumberOfCounselor;
                }
                private static void _TotalNumberOfCounselor_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TotalNumberOfCounselor = v;
                }
                private static void _TotalNumberOfCounselor_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.TotalNumberOfCounselor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    TotalNumberOfRounds = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "TotalNumberOfRounds",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._TotalNumberOfRounds_OnValueChanged);
                private static void _TotalNumberOfRounds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalNumberOfRounds, sf);
                }
                private static bool _TotalNumberOfRounds_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.TotalNumberOfRounds_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalNumberOfRounds_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalNumberOfRounds_Validate(r);
                }
                private static int _TotalNumberOfRounds_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalNumberOfRounds;
                }
                private static void _TotalNumberOfRounds_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TotalNumberOfRounds = v;
                }
                private static void _TotalNumberOfRounds_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.TotalNumberOfRounds_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    Comments = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "Comments",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Comments_OnValueChanged);
                private static void _Comments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._Comments, sf);
                }
                private static bool _Comments_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.Comments_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comments_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comments_Validate(r);
                }
                private static string _Comments_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.Comments;
                }
                private static void _Comments_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comments = v;
                }
                private static void _Comments_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.Comments_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    ActivityPlace = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "ActivityPlace",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityPlace_OnValueChanged);
                private static void _ActivityPlace_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityPlace, sf);
                }
                private static bool _ActivityPlace_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ActivityPlace_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityPlace_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityPlace_Validate(r);
                }
                private static string _ActivityPlace_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityPlace;
                }
                private static void _ActivityPlace_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityPlace = v;
                }
                private static void _ActivityPlace_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ActivityPlace_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    District = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "District",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._District_OnValueChanged);
                private static void _District_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._District, sf);
                }
                private static bool _District_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.District_IsReadOnly(ref result);
                    return result;
                }
                private static void _District_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.District_Validate(r);
                }
                private static string _District_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.District;
                }
                private static void _District_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.District = v;
                }
                private static void _District_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.District_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    ActivityStatusId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "ActivityStatusId",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityStatusId_OnValueChanged);
                private static void _ActivityStatusId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityStatusId, sf);
                }
                private static bool _ActivityStatusId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ActivityStatusId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityStatusId_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityStatusId_Validate(r);
                }
                private static string _ActivityStatusId_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityStatusId;
                }
                private static void _ActivityStatusId_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityStatusId = v;
                }
                private static void _ActivityStatusId_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ActivityStatusId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    ActivityType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "ActivityType",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityType_OnValueChanged);
                private static void _ActivityType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityType, sf);
                }
                private static bool _ActivityType_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ActivityType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActivityType_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityType_Validate(r);
                }
                private static string _ActivityType_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ActivityType;
                }
                private static void _ActivityType_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ActivityType = v;
                }
                private static void _ActivityType_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ActivityType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    SchoolType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "SchoolType",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._SchoolType_OnValueChanged);
                private static void _SchoolType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._SchoolType, sf);
                }
                private static bool _SchoolType_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.SchoolType_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchoolType_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchoolType_Validate(r);
                }
                private static string _SchoolType_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.SchoolType;
                }
                private static void _SchoolType_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SchoolType = v;
                }
                private static void _SchoolType_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.SchoolType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    Contact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "Contact",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Contact_OnValueChanged);
                private static void _Contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._Contact, sf);
                }
                private static bool _Contact_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.Contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contact_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contact_Validate(r);
                }
                private static string _Contact_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.Contact;
                }
                private static void _Contact_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Contact = v;
                }
                private static void _Contact_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.Contact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    Audience = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "Audience",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._Audience_OnValueChanged);
                private static void _Audience_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._Audience, sf);
                }
                private static bool _Audience_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.Audience_IsReadOnly(ref result);
                    return result;
                }
                private static void _Audience_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Audience_Validate(r);
                }
                private static string _Audience_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.Audience;
                }
                private static void _Audience_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Audience = v;
                }
                private static void _Audience_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.Audience_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    DistrictId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "DistrictId",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DistrictId_OnValueChanged);
                private static void _DistrictId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._DistrictId, sf);
                }
                private static bool _DistrictId_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.DistrictId_IsReadOnly(ref result);
                    return result;
                }
                private static void _DistrictId_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DistrictId_Validate(r);
                }
                private static int _DistrictId_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.DistrictId;
                }
                private static void _DistrictId_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DistrictId = v;
                }
                private static void _DistrictId_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.DistrictId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    HebrewDate = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "HebrewDate",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._HebrewDate_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._HebrewDate_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._HebrewDate_ComputeValue);
                private static void _HebrewDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._HebrewDate, sf);
                }
                private static void _HebrewDate_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HebrewDate_Validate(r);
                }
                private static string _HebrewDate_ComputeValue(global::LightSwitchApplication.ActivityView e)
                {
                    string value = default(string);
                    e.HebrewDate_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    ContactPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "ContactPhone",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ContactPhone_OnValueChanged);
                private static void _ContactPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactPhone, sf);
                }
                private static bool _ContactPhone_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.ContactPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactPhone_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactPhone_Validate(r);
                }
                private static string _ContactPhone_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactPhone;
                }
                private static void _ContactPhone_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactPhone = v;
                }
                private static void _ContactPhone_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.ContactPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    DayInWeek = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "DayInWeek",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DayInWeek_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DayInWeek_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._DayInWeek_ComputeValue);
                private static void _DayInWeek_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._DayInWeek, sf);
                }
                private static void _DayInWeek_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DayInWeek_Validate(r);
                }
                private static string _DayInWeek_ComputeValue(global::LightSwitchApplication.ActivityView e)
                {
                    string value = default(string);
                    e.DayInWeek_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    CounselorInActivity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "CounselorInActivity",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._CounselorInActivity_OnValueChanged);
                private static void _CounselorInActivity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._CounselorInActivity, sf);
                }
                private static bool _CounselorInActivity_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.CounselorInActivity_IsReadOnly(ref result);
                    return result;
                }
                private static void _CounselorInActivity_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CounselorInActivity_Validate(r);
                }
                private static string _CounselorInActivity_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.CounselorInActivity;
                }
                private static void _CounselorInActivity_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CounselorInActivity = v;
                }
                private static void _CounselorInActivity_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.CounselorInActivity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry
                    NumberOfAssigedCounselor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Entry(
                        "NumberOfAssigedCounselor",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._NumberOfAssigedCounselor_OnValueChanged);
                private static void _NumberOfAssigedCounselor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberOfAssigedCounselor, sf);
                }
                private static bool _NumberOfAssigedCounselor_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.NumberOfAssigedCounselor_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberOfAssigedCounselor_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberOfAssigedCounselor_Validate(r);
                }
                private static int _NumberOfAssigedCounselor_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberOfAssigedCounselor;
                }
                private static void _NumberOfAssigedCounselor_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberOfAssigedCounselor = v;
                }
                private static void _NumberOfAssigedCounselor_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.NumberOfAssigedCounselor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool>.Entry
                    IsMissingCounselors = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool>.Entry(
                        "IsMissingCounselors",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._IsMissingCounselors_OnValueChanged);
                private static void _IsMissingCounselors_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._IsMissingCounselors, sf);
                }
                private static bool _IsMissingCounselors_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.IsMissingCounselors_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsMissingCounselors_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsMissingCounselors_Validate(r);
                }
                private static bool _IsMissingCounselors_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.IsMissingCounselors;
                }
                private static void _IsMissingCounselors_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsMissingCounselors = v;
                }
                private static void _IsMissingCounselors_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.IsMissingCounselors_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry
                    StartTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry(
                        "StartTime",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._StartTime_OnValueChanged);
                private static void _StartTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._StartTime, sf);
                }
                private static bool _StartTime_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.StartTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartTime_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartTime_Validate(r);
                }
                private static global::System.DateTime _StartTime_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.StartTime;
                }
                private static void _StartTime_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartTime = global::LightSwitchApplication.ActivityView.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartTime_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.StartTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry
                    EndTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Entry(
                        "EndTime",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_GetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_SetImplementationValue,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._EndTime_OnValueChanged);
                private static void _EndTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._EndTime, sf);
                }
                private static bool _EndTime_ComputeIsReadOnly(global::LightSwitchApplication.ActivityView e)
                {
                    bool result = false;
                    e.EndTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndTime_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndTime_Validate(r);
                }
                private static global::System.DateTime _EndTime_GetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d)
                {
                    return d.ImplementationEntity.EndTime;
                }
                private static void _EndTime_SetImplementationValue(global::LightSwitchApplication.ActivityView.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndTime = global::LightSwitchApplication.ActivityView.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EndTime_OnValueChanged(global::LightSwitchApplication.ActivityView e)
                {
                    e.EndTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry
                    ActivityTime = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Entry(
                        "ActivityTime",
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityTime_Stub,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityTime_Validate,
                        global::LightSwitchApplication.ActivityView.DetailsClass.PropertySetProperties._ActivityTime_ComputeValue);
                private static void _ActivityTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ActivityView.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data> c, global::LightSwitchApplication.ActivityView.DetailsClass d, object sf)
                {
                    c(d, ref d._ActivityTime, sf);
                }
                private static void _ActivityTime_Validate(global::LightSwitchApplication.ActivityView e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActivityTime_Validate(r);
                }
                private static string _ActivityTime_ComputeValue(global::LightSwitchApplication.ActivityView e)
                {
                    string value = default(string);
                    e.ActivityTime_Compute(ref value);
                    return value;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _ActivityId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _SchoolName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data _ActivityDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _SchoolPartName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _TopicCollection;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _Topic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _TotalNumberOfClasses;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _TotalNumberOfCounselor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _TotalNumberOfRounds;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _Comments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _ActivityPlace;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _District;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _ActivityStatusId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _ActivityType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _SchoolType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _Contact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _Audience;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _DistrictId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _HebrewDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _ContactPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _DayInWeek;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _CounselorInActivity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, int>.Data _NumberOfAssigedCounselor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, bool>.Data _IsMissingCounselors;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data _StartTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, global::System.DateTime>.Data _EndTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ActivityView, global::LightSwitchApplication.ActivityView.DetailsClass, string>.Data _ActivityTime;
            
        }
    
        #endregion
    }
    
    #endregion
}
